;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5.11.2024 11:39:51
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF007EFA4  	GOTO        3912
_interrupt:
;Silo.c,39 :: 		void interrupt() {
0x0008	0xF018C000  	MOVFF       R0, 24
0x000C	0xF017C001  	MOVFF       R1, 23
0x0010	0xF016C002  	MOVFF       R2, 22
0x0014	0xF015C003  	MOVFF       R3, 21
;Silo.c,40 :: 		RS485Slave_Receive(dat);
0x0018	0xF01BCFE1  	MOVFF       FSR1L, 27
0x001C	0xF01CCFE2  	MOVFF       FSR1H, 28
0x0020	0xF019CFE9  	MOVFF       FSR0L, 25
0x0024	0xF01ACFEA  	MOVFF       FSR0H, 26
0x0028	0x0E6C      	MOVLW       _dat
0x002A	0x0100      	MOVLB       0
0x002C	0x6FE3      	MOVWF       FARG_RS485Slave_Receive_data_buffer, 1
0x002E	0x0E00      	MOVLW       hi_addr(_dat)
0x0030	0x6FE4      	MOVWF       FARG_RS485Slave_Receive_data_buffer+1, 1
0x0032	0xF004EC66  	CALL        _RS485Slave_Receive, 0
;Silo.c,42 :: 		}
L_end_interrupt:
L__interrupt12:
0x0036	0xF000C018  	MOVFF       24, R0
0x003A	0xF001C017  	MOVFF       23, R1
0x003E	0xF002C016  	MOVFF       22, R2
0x0042	0xF003C015  	MOVFF       21, R3
0x0046	0xFFE9C019  	MOVFF       25, FSR0L
0x004A	0xFFEAC01A  	MOVFF       26, FSR0H
0x004E	0xFFE1C01B  	MOVFF       27, FSR1L
0x0052	0xFFE2C01C  	MOVFF       28, FSR1H
0x0056	0x0011      	RETFIE      1
; end of _interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0058	0x0E10      	MOVLW       16
0x005A	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x005C	0x2E0D      	DECFSZ      R13, 1, 0
0x005E	0xD7FE      	BRA         L_Delay_50us2
0x0060	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0062	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_80us:
;__Lib_Delays.c,23 :: 		void Delay_80us() {
;__Lib_Delays.c,24 :: 		Delay_us(78);
0x0064	0x0E19      	MOVLW       25
0x0066	0x6E0D      	MOVWF       R13, 0
L_Delay_80us3:
0x0068	0x2E0D      	DECFSZ      R13, 1, 0
0x006A	0xD7FE      	BRA         L_Delay_80us3
0x006C	0x0000      	NOP
0x006E	0x0000      	NOP
;__Lib_Delays.c,25 :: 		}
L_end_Delay_80us:
0x0070	0x0012      	RETURN      0
; end of _Delay_80us
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0072	0x0EA5      	MOVLW       165
0x0074	0x6E0D      	MOVWF       R13, 0
L_Delay_500us4:
0x0076	0x2E0D      	DECFSZ      R13, 1, 0
0x0078	0xD7FE      	BRA         L_Delay_500us4
0x007A	0x0000      	NOP
0x007C	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x007E	0x0012      	RETURN      0
; end of _Delay_500us
_Ow_Write_Zero:
;DS18B20.c,362 :: 		void Ow_Write_Zero()
;DS18B20.c,364 :: 		TRISBIT = 0;     // Set pin 2 in PORT E as output
0x0080	0x9893      	BCF         TRISB, 4 
;DS18B20.c,365 :: 		PORTBIT = 0;   // Drive bus low
0x0082	0x9881      	BCF         PORTB, 4 
;DS18B20.c,366 :: 		delay_us(60);   // Wait 60 usecs
0x0084	0x0E13      	MOVLW       19
0x0086	0x6E0D      	MOVWF       R13, 0
L_Ow_Write_Zero54:
0x0088	0x2E0D      	DECFSZ      R13, 1, 0
0x008A	0xD7FE      	BRA         L_Ow_Write_Zero54
0x008C	0x0000      	NOP
0x008E	0x0000      	NOP
;DS18B20.c,367 :: 		TRISBIT = 1;     // Release the bus
0x0090	0x8893      	BSF         TRISB, 4 
;DS18B20.c,368 :: 		delay_us(10);   // Wait 10 usecs
0x0092	0x0E03      	MOVLW       3
0x0094	0x6E0D      	MOVWF       R13, 0
L_Ow_Write_Zero55:
0x0096	0x2E0D      	DECFSZ      R13, 1, 0
0x0098	0xD7FE      	BRA         L_Ow_Write_Zero55
;DS18B20.c,369 :: 		}
L_end_Ow_Write_Zero:
0x009A	0x0012      	RETURN      0
; end of _Ow_Write_Zero
_Ow_Write_One:
;DS18B20.c,353 :: 		void Ow_Write_One()
;DS18B20.c,355 :: 		TRISBIT = 0;      // Set pin 2 in PORT E as output
0x009C	0x9893      	BCF         TRISB, 4 
;DS18B20.c,356 :: 		PORTBIT = 0;    // Drive bus low
0x009E	0x9881      	BCF         PORTB, 4 
;DS18B20.c,357 :: 		delay_us(6);     // Wait 6 usecs        (6*4)*0.25 us
0x00A0	0x0000      	NOP
0x00A2	0x0000      	NOP
0x00A4	0x0000      	NOP
0x00A6	0x0000      	NOP
0x00A8	0x0000      	NOP
0x00AA	0x0000      	NOP
;DS18B20.c,358 :: 		TRISBIT = 1;      // Release the bus
0x00AC	0x8893      	BSF         TRISB, 4 
;DS18B20.c,359 :: 		delay_us(64);    // Wait 64 usecs        (64*4)*0.25 us
0x00AE	0x0E15      	MOVLW       21
0x00B0	0x6E0D      	MOVWF       R13, 0
L_Ow_Write_One53:
0x00B2	0x2E0D      	DECFSZ      R13, 1, 0
0x00B4	0xD7FE      	BRA         L_Ow_Write_One53
;DS18B20.c,360 :: 		}
L_end_Ow_Write_One:
0x00B6	0x0012      	RETURN      0
; end of _Ow_Write_One
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x00B8	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x00BA	0x0012      	RETURN      0
; end of _Delay_1us
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x00BC	0xB2AC      	BTFSC       TXSTA, 1 
0x00BE	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x00C0	0x0000      	NOP
0x00C2	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x00C4	0xFFADC0DC  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x00C8	0x0012      	RETURN      0
; end of _UART1_Write
_docrc8:
;DS18B20.c,189 :: 		unsigned char docrc8(unsigned char value)
;DS18B20.c,191 :: 		crc8 = dscrc_table[crc8 ^ value];    // Xor operation
0x00CA	0x0100      	MOVLB       0
0x00CC	0x51DC      	MOVF        FARG_docrc8_value, 0, 1
0x00CE	0x1879      	XORWF       _crc8, 0 
0x00D0	0x6E00      	MOVWF       R0 
0x00D2	0x0E4E      	MOVLW       _dscrc_table
0x00D4	0x2400      	ADDWF       R0, 0 
0x00D6	0x6EF6      	MOVWF       4086 
0x00D8	0x0E10      	MOVLW       hi_addr(_dscrc_table)
0x00DA	0x6EF7      	MOVWF       TBLPTRH 
0x00DC	0x0E00      	MOVLW       0
0x00DE	0x22F7      	ADDWFC      TBLPTRH, 1 
0x00E0	0x0E00      	MOVLW       higher_addr(_dscrc_table)
0x00E2	0x6EF8      	MOVWF       TBLPTRU 
0x00E4	0x0E00      	MOVLW       0
0x00E6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x00E8	0x0009      	TBLRD*+
0x00EA	0xF000CFF5  	MOVFF       TABLAT, R0
0x00EE	0xF079C000  	MOVFF       R0, _crc8
;DS18B20.c,192 :: 		return crc8;
;DS18B20.c,193 :: 		}
L_end_docrc8:
0x00F2	0x0012      	RETURN      0
; end of _docrc8
_Ow_Write:
;__Lib_OneWire.c,56 :: 		
;__Lib_OneWire.c,59 :: 		
0x00F4	0xF001C0DE  	MOVFF       FARG_Ow_Write_pin, R1
0x00F8	0x0E01      	MOVLW       1
0x00FA	0x6E00      	MOVWF       R0 
0x00FC	0x5001      	MOVF        R1, 0 
L__Ow_Write17:
0x00FE	0xE004      	BZ          L__Ow_Write18
0x0100	0x3600      	RLCF        R0, 1 
0x0102	0x9000      	BCF         R0, 0 
0x0104	0x0FFF      	ADDLW       255
0x0106	0xD7FB      	BRA         L__Ow_Write17
L__Ow_Write18:
0x0108	0xF0E2C000  	MOVFF       R0, Ow_Write_bit_mask_1_L0
;__Lib_OneWire.c,60 :: 		
0x010C	0x1E00      	COMF        R0, 1 
0x010E	0xF0E1C000  	MOVFF       R0, Ow_Write_bit_mask_0_L0
;__Lib_OneWire.c,62 :: 		
0x0112	0xFFE9C0DC  	MOVFF       FARG_Ow_Write_port, FSR0L
0x0116	0xFFEAC0DD  	MOVFF       FARG_Ow_Write_port+1, FSR0H
;__Lib_OneWire.c,63 :: 		
0x011A	0x5000      	MOVF        R0, 0 
0x011C	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,65 :: 		
0x011E	0x0E12      	MOVLW       18
0x0120	0x26E9      	ADDWF       FSR0L, 1 
;__Lib_OneWire.c,67 :: 		
0x0122	0x0100      	MOVLB       0
0x0124	0x6BE0      	CLRF        Ow_Write_i_L0, 1
L_Ow_Write4:
0x0126	0x51E0      	MOVF        Ow_Write_i_L0, 0, 1
0x0128	0x0807      	SUBLW       7
0x012A	0xE315      	BNC         L_Ow_Write5
;__Lib_OneWire.c,68 :: 		
0x012C	0xF000C0E0  	MOVFF       Ow_Write_i_L0, R0
0x0130	0xF001C0DF  	MOVFF       FARG_Ow_Write_data_, R1
0x0134	0x5000      	MOVF        R0, 0 
L__Ow_Write19:
0x0136	0xE004      	BZ          L__Ow_Write20
0x0138	0x3201      	RRCF        R1, 1 
0x013A	0x9E01      	BCF         R1, 7 
0x013C	0x0FFF      	ADDLW       255
0x013E	0xD7FB      	BRA         L__Ow_Write19
L__Ow_Write20:
;__Lib_OneWire.c,71 :: 		
0x0140	0x51E1      	MOVF        Ow_Write_bit_mask_0_L0, 0, 1
0x0142	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,73 :: 		
0x0144	0xA001      	BTFSS       R1, 0 
0x0146	0xD002      	BRA         L_Ow_Write7
;__Lib_OneWire.c,74 :: 		
0x0148	0x51E2      	MOVF        Ow_Write_bit_mask_1_L0, 0, 1
0x014A	0x12EF      	IORWF       INDF0, 1 
;__Lib_OneWire.c,75 :: 		
L_Ow_Write7:
;__Lib_OneWire.c,77 :: 		
0x014C	0xDF8B      	RCALL       _Delay_80us
;__Lib_OneWire.c,79 :: 		
0x014E	0x51E2      	MOVF        Ow_Write_bit_mask_1_L0, 0, 1
0x0150	0x12EF      	IORWF       INDF0, 1 
;__Lib_OneWire.c,67 :: 		
0x0152	0x2BE0      	INCF        Ow_Write_i_L0, 1, 1
;__Lib_OneWire.c,81 :: 		
0x0154	0xD7E8      	BRA         L_Ow_Write4
L_Ow_Write5:
;__Lib_OneWire.c,82 :: 		
0x0156	0x0E12      	MOVLW       18
0x0158	0x5EE9      	SUBWF       FSR0L, 1 
;__Lib_OneWire.c,84 :: 		
0x015A	0xDF7E      	RCALL       _Delay_50us
;__Lib_OneWire.c,85 :: 		
0x015C	0xDF7D      	RCALL       _Delay_50us
;__Lib_OneWire.c,86 :: 		
L_end_Ow_Write:
0x015E	0x0012      	RETURN      0
; end of _Ow_Write
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0160	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0162	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0164	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0166	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0168	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x016A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x016C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x016E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0170	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0172	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0174	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0176	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0178	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x017A	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x017C	0x0012      	RETURN      0
; end of _Div_8X8_U
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x017E	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0182	0xA2AB      	BTFSS       RCSTA, 1 
0x0184	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x0186	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0188	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x018A	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x018E	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x0190	0x0E00      	MOVLW       0
0x0192	0xBA9E      	BTFSC       PIR1, 5 
0x0194	0x0E01      	MOVLW       1
0x0196	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x0198	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x019A	0x0E00      	MOVLW       0
0x019C	0xB2AC      	BTFSC       TXSTA, 1 
0x019E	0x0E01      	MOVLW       1
0x01A0	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x01A2	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_Ow_Reset:
;__Lib_OneWire.c,6 :: 		
;__Lib_OneWire.c,9 :: 		
0x01A4	0xF001C0DE  	MOVFF       FARG_Ow_Reset_pin, R1
0x01A8	0x0E01      	MOVLW       1
0x01AA	0x6E00      	MOVWF       R0 
0x01AC	0x5001      	MOVF        R1, 0 
L__Ow_Reset9:
0x01AE	0xE004      	BZ          L__Ow_Reset10
0x01B0	0x3600      	RLCF        R0, 1 
0x01B2	0x9000      	BCF         R0, 0 
0x01B4	0x0FFF      	ADDLW       255
0x01B6	0xD7FB      	BRA         L__Ow_Reset9
L__Ow_Reset10:
0x01B8	0xF0E0C000  	MOVFF       R0, Ow_Reset_bit_mask_1_L0
;__Lib_OneWire.c,10 :: 		
0x01BC	0x1E00      	COMF        R0, 1 
;__Lib_OneWire.c,11 :: 		
0x01BE	0xFFE9C0DC  	MOVFF       FARG_Ow_Reset_port, FSR0L
0x01C2	0xFFEAC0DD  	MOVFF       FARG_Ow_Reset_port+1, FSR0H
;__Lib_OneWire.c,12 :: 		
0x01C6	0x5000      	MOVF        R0, 0 
0x01C8	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,13 :: 		
0x01CA	0x0E12      	MOVLW       18
0x01CC	0x26E9      	ADDWF       FSR0L, 1 
;__Lib_OneWire.c,14 :: 		
0x01CE	0x5000      	MOVF        R0, 0 
0x01D0	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,15 :: 		
0x01D2	0xDF4F      	RCALL       _Delay_500us
;__Lib_OneWire.c,16 :: 		
0x01D4	0x0100      	MOVLB       0
0x01D6	0x51E0      	MOVF        Ow_Reset_bit_mask_1_L0, 0, 1
0x01D8	0x12EF      	IORWF       INDF0, 1 
;__Lib_OneWire.c,17 :: 		
0x01DA	0x0E12      	MOVLW       18
0x01DC	0x5EE9      	SUBWF       FSR0L, 1 
;__Lib_OneWire.c,19 :: 		
0x01DE	0xDF42      	RCALL       _Delay_80us
;__Lib_OneWire.c,20 :: 		
0x01E0	0x51E0      	MOVF        Ow_Reset_bit_mask_1_L0, 0, 1
0x01E2	0x14EF      	ANDWF       INDF0, 0 
0x01E4	0x6FDF      	MOVWF       Ow_Reset_res_L0, 1
0x01E6	0x51DF      	MOVF        Ow_Reset_res_L0, 0, 1
0x01E8	0x0A00      	XORLW       0
0x01EA	0x0E00      	MOVLW       0
0x01EC	0xA4D8      	BTFSS       STATUS, 2 
0x01EE	0x0E01      	MOVLW       1
0x01F0	0x6FDF      	MOVWF       Ow_Reset_res_L0, 1
;__Lib_OneWire.c,21 :: 		
0x01F2	0xDF3F      	RCALL       _Delay_500us
;__Lib_OneWire.c,22 :: 		
0x01F4	0xF000C0DF  	MOVFF       Ow_Reset_res_L0, R0
;__Lib_OneWire.c,23 :: 		
L_end_Ow_Reset:
0x01F8	0x0012      	RETURN      0
; end of _Ow_Reset
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x01FA	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x01FC	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x01FE	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0200	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0202	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0204	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0208	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x020C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x020E	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0210	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0214	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0218	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x021A	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x021C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x021E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0220	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0222	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0224	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0226	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0228	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x022A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x022C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x022E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0230	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0232	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0234	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0236	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0238	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x023C	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0240	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0244	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x0248	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x024A	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x024C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x024E	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0250	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x0252	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0254	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0256	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0258	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x025A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x025C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x025E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0260	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0262	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0264	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0266	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0268	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x026A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x026C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x026E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0270	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0272	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0274	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0276	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0278	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x027A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x027C	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x027E	0x0012      	RETURN      0
; end of _Div_16X16_U
_Ow_Read_Bit:
;DS18B20.c,340 :: 		unsigned short Ow_Read_Bit()
;DS18B20.c,343 :: 		TRISBIT = 0;                 // Set pin 2 in PORT E as output
0x0280	0x9893      	BCF         TRISB, 4 
;DS18B20.c,344 :: 		PORTBIT = 0;               // Drive bus low   LATE.B2;   for PIC18
0x0282	0x9881      	BCF         PORTB, 4 
;DS18B20.c,345 :: 		delay_us(6);                // Wait 6 usecs
0x0284	0x0000      	NOP
0x0286	0x0000      	NOP
0x0288	0x0000      	NOP
0x028A	0x0000      	NOP
0x028C	0x0000      	NOP
0x028E	0x0000      	NOP
;DS18B20.c,346 :: 		TRISBIT = 1;                 // Release the bus
0x0290	0x8893      	BSF         TRISB, 4 
;DS18B20.c,347 :: 		delay_us(9);                // Wait 9 usecs
0x0292	0x0E02      	MOVLW       2
0x0294	0x6E0D      	MOVWF       R13, 0
L_Ow_Read_Bit51:
0x0296	0x2E0D      	DECFSZ      R13, 1, 0
0x0298	0xD7FE      	BRA         L_Ow_Read_Bit51
0x029A	0x0000      	NOP
0x029C	0x0000      	NOP
;DS18B20.c,348 :: 		BitValue = PORTBIT;         // Read bit value on pin 2 on PORT E
0x029E	0x0E00      	MOVLW       0
0x02A0	0xB881      	BTFSC       PORTB, 4 
0x02A2	0x0E01      	MOVLW       1
0x02A4	0x6E01      	MOVWF       R1 
;DS18B20.c,349 :: 		delay_us(55);               // Wait 55 usecs
0x02A6	0x0E12      	MOVLW       18
0x02A8	0x6E0D      	MOVWF       R13, 0
L_Ow_Read_Bit52:
0x02AA	0x2E0D      	DECFSZ      R13, 1, 0
0x02AC	0xD7FE      	BRA         L_Ow_Read_Bit52
;DS18B20.c,350 :: 		return BitValue;            // Return bit read
0x02AE	0xF000C001  	MOVFF       R1, R0
;DS18B20.c,351 :: 		}
L_end_Ow_Read_Bit:
0x02B2	0x0012      	RETURN      0
; end of _Ow_Read_Bit
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x02B4	0x0EBC      	MOVLW       _UART1_Write
0x02B6	0x0100      	MOVLB       0
0x02B8	0x6F9A      	MOVWF       _UART_Wr_Ptr, 1
0x02BA	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x02BC	0x6F9B      	MOVWF       _UART_Wr_Ptr+1, 1
0x02BE	0x0EDC      	MOVLW       FARG_UART1_Write_data_
0x02C0	0x6F9C      	MOVWF       _UART_Wr_Ptr+2, 1
0x02C2	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x02C4	0x6F9D      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x02C6	0x0E7E      	MOVLW       _UART1_Read
0x02C8	0x6F87      	MOVWF       _UART_Rd_Ptr, 1
0x02CA	0x0E01      	MOVLW       hi_addr(_UART1_Read)
0x02CC	0x6F88      	MOVWF       _UART_Rd_Ptr+1, 1
0x02CE	0x0E00      	MOVLW       0
0x02D0	0x6F89      	MOVWF       _UART_Rd_Ptr+2, 1
0x02D2	0x0E00      	MOVLW       0
0x02D4	0x6F8A      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x02D6	0x0E90      	MOVLW       _UART1_Data_Ready
0x02D8	0x6F8B      	MOVWF       _UART_Rdy_Ptr, 1
0x02DA	0x0E01      	MOVLW       hi_addr(_UART1_Data_Ready)
0x02DC	0x6F8C      	MOVWF       _UART_Rdy_Ptr+1, 1
0x02DE	0x0E00      	MOVLW       0
0x02E0	0x6F8D      	MOVWF       _UART_Rdy_Ptr+2, 1
0x02E2	0x0E00      	MOVLW       0
0x02E4	0x6F8E      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x02E6	0x0E9A      	MOVLW       _UART1_Tx_Idle
0x02E8	0x6F8F      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x02EA	0x0E01      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x02EC	0x6F90      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x02EE	0x0E00      	MOVLW       0
0x02F0	0x6F91      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x02F2	0x0E00      	MOVLW       0
0x02F4	0x6F92      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x02F6	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x02F8	0x0E90      	MOVLW       144
0x02FA	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x02FC	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x02FE	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0300	0xAA9E      	BTFSS       PIR1, 5 
0x0302	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0304	0xF000CFAE  	MOVFF       RCREG, R0
0x0308	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x030A	0x0012      	RETURN      0
; end of _UART1_Init
_RS485Slave_Init:
;__Lib_RS485.c,40 :: 		
;__Lib_RS485.c,41 :: 		
0x030C	0x9494      	BCF         rs485_rxtx_pin_direction, BitPos(rs485_rxtx_pin_direction+0) 
;__Lib_RS485.c,42 :: 		
0x030E	0x9482      	BCF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,44 :: 		
0x0310	0x0E01      	MOVLW       1
0x0312	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,45 :: 		
0x0314	0x0100      	MOVLB       0
0x0316	0x6B99      	CLRF        __Lib_RS485_specadr, 1
;__Lib_RS485.c,46 :: 		
0x0318	0xF09EC0D5  	MOVFF       FARG_RS485Slave_Init_slave_address, __Lib_RS485__sladdress
;__Lib_RS485.c,47 :: 		
0x031C	0x51D5      	MOVF        FARG_RS485Slave_Init_slave_address, 0, 1
0x031E	0x0A96      	XORLW       150
0x0320	0xE004      	BZ          L__RS485Slave_Init104
0x0322	0x51D5      	MOVF        FARG_RS485Slave_Init_slave_address, 0, 1
0x0324	0x0AA9      	XORLW       169
0x0326	0xE001      	BZ          L__RS485Slave_Init104
0x0328	0xD005      	BRA         L_RS485Slave_Init2
L__RS485Slave_Init104:
;__Lib_RS485.c,48 :: 		
0x032A	0x0E01      	MOVLW       1
0x032C	0x19D5      	XORWF       FARG_RS485Slave_Init_slave_address, 0, 1
0x032E	0x6F9E      	MOVWF       __Lib_RS485__sladdress, 1
;__Lib_RS485.c,49 :: 		
0x0330	0x0EFF      	MOVLW       255
0x0332	0x6F99      	MOVWF       __Lib_RS485_specadr, 1
;__Lib_RS485.c,50 :: 		
L_RS485Slave_Init2:
;__Lib_RS485.c,51 :: 		
L_end_RS485Slave_Init:
0x0334	0x0012      	RETURN      0
; end of _RS485Slave_Init
_search:
;DS18B20.c,195 :: 		int search()
;DS18B20.c,198 :: 		id_bit_number = 1;
0x0336	0x0E01      	MOVLW       1
0x0338	0x6E7A      	MOVWF       _id_bit_number 
0x033A	0x0E00      	MOVLW       0
0x033C	0x6E7B      	MOVWF       _id_bit_number+1 
;DS18B20.c,199 :: 		last_zero = 0;
0x033E	0x6A75      	CLRF        _last_zero 
0x0340	0x6A76      	CLRF        _last_zero+1 
;DS18B20.c,200 :: 		rom_byte_number = 0;
0x0342	0x6A77      	CLRF        _rom_byte_number 
0x0344	0x6A78      	CLRF        _rom_byte_number+1 
;DS18B20.c,201 :: 		rom_byte_mask = 1;
0x0346	0x0E01      	MOVLW       1
0x0348	0x6E7C      	MOVWF       _rom_byte_mask 
;DS18B20.c,202 :: 		search_result = 0;
0x034A	0x0100      	MOVLB       0
0x034C	0x6B83      	CLRF        _search_result, 1
0x034E	0x6B84      	CLRF        _search_result+1, 1
;DS18B20.c,203 :: 		crc8 = 0;
0x0350	0x6A79      	CLRF        _crc8 
;DS18B20.c,206 :: 		if (!LastDeviceFlag)
0x0352	0x5185      	MOVF        _LastDeviceFlag, 0, 1
0x0354	0x1186      	IORWF       _LastDeviceFlag+1, 0, 1
0x0356	0xA4D8      	BTFSS       STATUS, 2 
0x0358	0xD0E8      	BRA         L_search20
;DS18B20.c,209 :: 		if (Ow_Reset(&PORT, PIN))
0x035A	0x0E81      	MOVLW       PORTB
0x035C	0x6FDC      	MOVWF       FARG_Ow_Reset_port, 1
0x035E	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0360	0x6FDD      	MOVWF       FARG_Ow_Reset_port+1, 1
0x0362	0x0E04      	MOVLW       4
0x0364	0x6FDE      	MOVWF       FARG_Ow_Reset_pin, 1
0x0366	0xDF1E      	RCALL       _Ow_Reset
0x0368	0x5200      	MOVF        R0, 1 
0x036A	0xE009      	BZ          L_search21
;DS18B20.c,212 :: 		LastDiscrepancy = 0;
0x036C	0x6A7D      	CLRF        _LastDiscrepancy 
0x036E	0x6A7E      	CLRF        _LastDiscrepancy+1 
;DS18B20.c,213 :: 		LastDeviceFlag = 0;
0x0370	0x6B85      	CLRF        _LastDeviceFlag, 1
0x0372	0x6B86      	CLRF        _LastDeviceFlag+1, 1
;DS18B20.c,214 :: 		LastFamilyDiscrepancy = 0;
0x0374	0x6B81      	CLRF        _LastFamilyDiscrepancy, 1
0x0376	0x6B82      	CLRF        _LastFamilyDiscrepancy+1, 1
;DS18B20.c,215 :: 		return 0;
0x0378	0x6A00      	CLRF        R0 
0x037A	0x6A01      	CLRF        R1 
0x037C	0xD0E8      	BRA         L_end_search
;DS18B20.c,216 :: 		}
L_search21:
;DS18B20.c,218 :: 		Ow_Write(&PORT, PIN, 0xF0);
0x037E	0x0E81      	MOVLW       PORTB
0x0380	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0382	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0384	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0386	0x0E04      	MOVLW       4
0x0388	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x038A	0x0EF0      	MOVLW       240
0x038C	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x038E	0xDEB2      	RCALL       _Ow_Write
;DS18B20.c,221 :: 		do
L_search22:
;DS18B20.c,224 :: 		id_bit = OW_Read_Bit();
0x0390	0xDF77      	RCALL       _Ow_Read_Bit
0x0392	0xF066C000  	MOVFF       R0, _id_bit
0x0396	0x0E00      	MOVLW       0
0x0398	0x6E67      	MOVWF       _id_bit+1 
;DS18B20.c,225 :: 		cmp_id_bit = OW_Read_Bit();
0x039A	0xDF72      	RCALL       _Ow_Read_Bit
0x039C	0xF068C000  	MOVFF       R0, _cmp_id_bit
0x03A0	0x0E00      	MOVLW       0
0x03A2	0x6E69      	MOVWF       _cmp_id_bit+1 
;DS18B20.c,230 :: 		if ((id_bit == 1) && (cmp_id_bit == 1))
0x03A4	0x0E00      	MOVLW       0
0x03A6	0x1867      	XORWF       _id_bit+1, 0 
0x03A8	0xE102      	BNZ         L__search79
0x03AA	0x0E01      	MOVLW       1
0x03AC	0x1866      	XORWF       _id_bit, 0 
L__search79:
0x03AE	0xE107      	BNZ         L_search27
0x03B0	0x0E00      	MOVLW       0
0x03B2	0x1869      	XORWF       _cmp_id_bit+1, 0 
0x03B4	0xE102      	BNZ         L__search80
0x03B6	0x0E01      	MOVLW       1
0x03B8	0x1868      	XORWF       _cmp_id_bit, 0 
L__search80:
0x03BA	0xE101      	BNZ         L_search27
L__search57:
;DS18B20.c,231 :: 		break;
0x03BC	0xD092      	BRA         L_search23
L_search27:
;DS18B20.c,235 :: 		if (id_bit != cmp_id_bit)
0x03BE	0x5067      	MOVF        _id_bit+1, 0 
0x03C0	0x1869      	XORWF       _cmp_id_bit+1, 0 
0x03C2	0xE102      	BNZ         L__search81
0x03C4	0x5068      	MOVF        _cmp_id_bit, 0 
0x03C6	0x1866      	XORWF       _id_bit, 0 
L__search81:
0x03C8	0xE003      	BZ          L_search29
;DS18B20.c,236 :: 		search_direction = id_bit; // bit write value for search
0x03CA	0xF05DC066  	MOVFF       _id_bit, _search_direction
0x03CE	0xD037      	BRA         L_search30
L_search29:
;DS18B20.c,242 :: 		if (id_bit_number < LastDiscrepancy)
0x03D0	0x0E80      	MOVLW       128
0x03D2	0x187B      	XORWF       _id_bit_number+1, 0 
0x03D4	0x6E00      	MOVWF       R0 
0x03D6	0x0E80      	MOVLW       128
0x03D8	0x187E      	XORWF       _LastDiscrepancy+1, 0 
0x03DA	0x5C00      	SUBWF       R0, 0 
0x03DC	0xE102      	BNZ         L__search82
0x03DE	0x507D      	MOVF        _LastDiscrepancy, 0 
0x03E0	0x5C7A      	SUBWF       _id_bit_number, 0 
L__search82:
0x03E2	0xE210      	BC          L_search31
;DS18B20.c,243 :: 		search_direction = ((ROM_NO[rom_byte_number] & rom_byte_mask) > 0);
0x03E4	0x0E5E      	MOVLW       _ROM_NO
0x03E6	0x2477      	ADDWF       _rom_byte_number, 0 
0x03E8	0x6EE9      	MOVWF       FSR0L 
0x03EA	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x03EC	0x2078      	ADDWFC      _rom_byte_number+1, 0 
0x03EE	0x6EEA      	MOVWF       FSR0H 
0x03F0	0x507C      	MOVF        _rom_byte_mask, 0 
0x03F2	0x14EE      	ANDWF       POSTINC0, 0 
0x03F4	0x6E5D      	MOVWF       _search_direction 
0x03F6	0x505D      	MOVF        _search_direction, 0 
0x03F8	0x0800      	SUBLW       0
0x03FA	0x0E01      	MOVLW       1
0x03FC	0xB0D8      	BTFSC       STATUS, 0 
0x03FE	0x0E00      	MOVLW       0
0x0400	0x6E5D      	MOVWF       _search_direction 
0x0402	0xD009      	BRA         L_search32
L_search31:
;DS18B20.c,246 :: 		search_direction = (id_bit_number == LastDiscrepancy);
0x0404	0x507B      	MOVF        _id_bit_number+1, 0 
0x0406	0x187E      	XORWF       _LastDiscrepancy+1, 0 
0x0408	0xE102      	BNZ         L__search83
0x040A	0x507D      	MOVF        _LastDiscrepancy, 0 
0x040C	0x187A      	XORWF       _id_bit_number, 0 
L__search83:
0x040E	0x0E01      	MOVLW       1
0x0410	0xA4D8      	BTFSS       STATUS, 2 
0x0412	0x0E00      	MOVLW       0
0x0414	0x6E5D      	MOVWF       _search_direction 
L_search32:
;DS18B20.c,249 :: 		if (search_direction == 0)
0x0416	0x505D      	MOVF        _search_direction, 0 
0x0418	0x0A00      	XORLW       0
0x041A	0xE111      	BNZ         L_search33
;DS18B20.c,251 :: 		last_zero = id_bit_number;
0x041C	0xF075C07A  	MOVFF       _id_bit_number, _last_zero
0x0420	0xF076C07B  	MOVFF       _id_bit_number+1, _last_zero+1
;DS18B20.c,253 :: 		if (last_zero < 9)
0x0424	0x0E80      	MOVLW       128
0x0426	0x187B      	XORWF       _id_bit_number+1, 0 
0x0428	0x6E00      	MOVWF       R0 
0x042A	0x0E80      	MOVLW       128
0x042C	0x5C00      	SUBWF       R0, 0 
0x042E	0xE102      	BNZ         L__search84
0x0430	0x0E09      	MOVLW       9
0x0432	0x5C7A      	SUBWF       _id_bit_number, 0 
L__search84:
0x0434	0xE204      	BC          L_search34
;DS18B20.c,254 :: 		LastFamilyDiscrepancy = last_zero;
0x0436	0xF081C075  	MOVFF       _last_zero, _LastFamilyDiscrepancy
0x043A	0xF082C076  	MOVFF       _last_zero+1, _LastFamilyDiscrepancy+1
L_search34:
;DS18B20.c,255 :: 		}
L_search33:
;DS18B20.c,256 :: 		}
L_search30:
;DS18B20.c,261 :: 		if (search_direction == 1)
0x043E	0x505D      	MOVF        _search_direction, 0 
0x0440	0x0A01      	XORLW       1
0x0442	0xE114      	BNZ         L_search35
;DS18B20.c,262 :: 		ROM_NO[rom_byte_number] |= rom_byte_mask;
0x0444	0x0E5E      	MOVLW       _ROM_NO
0x0446	0x2477      	ADDWF       _rom_byte_number, 0 
0x0448	0x6E01      	MOVWF       R1 
0x044A	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x044C	0x2078      	ADDWFC      _rom_byte_number+1, 0 
0x044E	0x6E02      	MOVWF       R2 
0x0450	0xFFE9C001  	MOVFF       R1, FSR0L
0x0454	0xFFEAC002  	MOVFF       R2, FSR0H
0x0458	0x507C      	MOVF        _rom_byte_mask, 0 
0x045A	0x10EE      	IORWF       POSTINC0, 0 
0x045C	0x6E00      	MOVWF       R0 
0x045E	0xFFE1C001  	MOVFF       R1, FSR1L
0x0462	0xFFE2C002  	MOVFF       R2, FSR1H
0x0466	0xFFE6C000  	MOVFF       R0, POSTINC1
0x046A	0xD014      	BRA         L_search36
L_search35:
;DS18B20.c,264 :: 		ROM_NO[rom_byte_number] &= ~rom_byte_mask;
0x046C	0x0E5E      	MOVLW       _ROM_NO
0x046E	0x2477      	ADDWF       _rom_byte_number, 0 
0x0470	0x6E01      	MOVWF       R1 
0x0472	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x0474	0x2078      	ADDWFC      _rom_byte_number+1, 0 
0x0476	0x6E02      	MOVWF       R2 
0x0478	0x1C7C      	COMF        _rom_byte_mask, 0 
0x047A	0x6E00      	MOVWF       R0 
0x047C	0xFFE9C001  	MOVFF       R1, FSR0L
0x0480	0xFFEAC002  	MOVFF       R2, FSR0H
0x0484	0x50EE      	MOVF        POSTINC0, 0 
0x0486	0x1600      	ANDWF       R0, 1 
0x0488	0xFFE1C001  	MOVFF       R1, FSR1L
0x048C	0xFFE2C002  	MOVFF       R2, FSR1H
0x0490	0xFFE6C000  	MOVFF       R0, POSTINC1
L_search36:
;DS18B20.c,267 :: 		if (search_direction)
0x0494	0x525D      	MOVF        _search_direction, 1 
0x0496	0xE002      	BZ          L_search37
;DS18B20.c,268 :: 		Ow_Write_One();
0x0498	0xDE01      	RCALL       _Ow_Write_One
0x049A	0xD001      	BRA         L_search38
L_search37:
;DS18B20.c,270 :: 		Ow_Write_Zero();
0x049C	0xDDF1      	RCALL       _Ow_Write_Zero
L_search38:
;DS18B20.c,274 :: 		id_bit_number++;
0x049E	0x4A7A      	INFSNZ      _id_bit_number, 1 
0x04A0	0x2A7B      	INCF        _id_bit_number+1, 1 
;DS18B20.c,275 :: 		rom_byte_mask <<= 1;
0x04A2	0xF001C07C  	MOVFF       _rom_byte_mask, R1
0x04A6	0x3601      	RLCF        R1, 1 
0x04A8	0x9001      	BCF         R1, 0 
0x04AA	0xF07CC001  	MOVFF       R1, _rom_byte_mask
;DS18B20.c,280 :: 		if (rom_byte_mask == 0)
0x04AE	0x5001      	MOVF        R1, 0 
0x04B0	0x0A00      	XORLW       0
0x04B2	0xE10D      	BNZ         L_search39
;DS18B20.c,283 :: 		docrc8(ROM_NO[rom_byte_number]); // accumulate the CRC
0x04B4	0x0E5E      	MOVLW       _ROM_NO
0x04B6	0x2477      	ADDWF       _rom_byte_number, 0 
0x04B8	0x6EE9      	MOVWF       FSR0L 
0x04BA	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x04BC	0x2078      	ADDWFC      _rom_byte_number+1, 0 
0x04BE	0x6EEA      	MOVWF       FSR0H 
0x04C0	0xF0DCCFEE  	MOVFF       POSTINC0, FARG_docrc8_value
0x04C4	0xDE02      	RCALL       _docrc8
;DS18B20.c,284 :: 		rom_byte_number++;
0x04C6	0x4A77      	INFSNZ      _rom_byte_number, 1 
0x04C8	0x2A78      	INCF        _rom_byte_number+1, 1 
;DS18B20.c,285 :: 		rom_byte_mask = 1;
0x04CA	0x0E01      	MOVLW       1
0x04CC	0x6E7C      	MOVWF       _rom_byte_mask 
;DS18B20.c,286 :: 		}
L_search39:
;DS18B20.c,289 :: 		while (rom_byte_number < 8); // loop until through all ROM bytes 0-7
0x04CE	0x0E80      	MOVLW       128
0x04D0	0x1878      	XORWF       _rom_byte_number+1, 0 
0x04D2	0x6E00      	MOVWF       R0 
0x04D4	0x0E80      	MOVLW       128
0x04D6	0x5C00      	SUBWF       R0, 0 
0x04D8	0xE102      	BNZ         L__search85
0x04DA	0x0E08      	MOVLW       8
0x04DC	0x5C77      	SUBWF       _rom_byte_number, 0 
L__search85:
0x04DE	0xA0D8      	BTFSS       STATUS, 0 
0x04E0	0xD757      	BRA         L_search22
L_search23:
;DS18B20.c,292 :: 		if (!((id_bit_number < 65) || (crc8 != 0)))
0x04E2	0x0E80      	MOVLW       128
0x04E4	0x187B      	XORWF       _id_bit_number+1, 0 
0x04E6	0x6E00      	MOVWF       R0 
0x04E8	0x0E80      	MOVLW       128
0x04EA	0x5C00      	SUBWF       R0, 0 
0x04EC	0xE102      	BNZ         L__search86
0x04EE	0x0E41      	MOVLW       65
0x04F0	0x5C7A      	SUBWF       _id_bit_number, 0 
L__search86:
0x04F2	0xE305      	BNC         L_search41
0x04F4	0x5079      	MOVF        _crc8, 0 
0x04F6	0x0A00      	XORLW       0
0x04F8	0xE102      	BNZ         L_search41
0x04FA	0x6A00      	CLRF        R0 
0x04FC	0xD002      	BRA         L_search40
L_search41:
0x04FE	0x0E01      	MOVLW       1
0x0500	0x6E00      	MOVWF       R0 
L_search40:
0x0502	0x5200      	MOVF        R0, 1 
0x0504	0xE112      	BNZ         L_search42
;DS18B20.c,295 :: 		LastDiscrepancy = last_zero;
0x0506	0xF07DC075  	MOVFF       _last_zero, _LastDiscrepancy
0x050A	0xF07EC076  	MOVFF       _last_zero+1, _LastDiscrepancy+1
;DS18B20.c,298 :: 		if (LastDiscrepancy == 0)
0x050E	0x0E00      	MOVLW       0
0x0510	0x1876      	XORWF       _last_zero+1, 0 
0x0512	0xE102      	BNZ         L__search87
0x0514	0x0E00      	MOVLW       0
0x0516	0x1875      	XORWF       _last_zero, 0 
L__search87:
0x0518	0xE104      	BNZ         L_search43
;DS18B20.c,299 :: 		LastDeviceFlag = 1;
0x051A	0x0E01      	MOVLW       1
0x051C	0x6F85      	MOVWF       _LastDeviceFlag, 1
0x051E	0x0E00      	MOVLW       0
0x0520	0x6F86      	MOVWF       _LastDeviceFlag+1, 1
L_search43:
;DS18B20.c,300 :: 		search_result = 1;
0x0522	0x0E01      	MOVLW       1
0x0524	0x6F83      	MOVWF       _search_result, 1
0x0526	0x0E00      	MOVLW       0
0x0528	0x6F84      	MOVWF       _search_result+1, 1
;DS18B20.c,301 :: 		}
L_search42:
;DS18B20.c,302 :: 		}
L_search20:
;DS18B20.c,307 :: 		if (!search_result || !ROM_NO[0])
0x052A	0x5183      	MOVF        _search_result, 0, 1
0x052C	0x1184      	IORWF       _search_result+1, 0, 1
0x052E	0xE003      	BZ          L__search56
0x0530	0x525E      	MOVF        _ROM_NO, 1 
0x0532	0xE001      	BZ          L__search56
0x0534	0xD008      	BRA         L_search46
L__search56:
;DS18B20.c,309 :: 		LastDiscrepancy = 0;
0x0536	0x6A7D      	CLRF        _LastDiscrepancy 
0x0538	0x6A7E      	CLRF        _LastDiscrepancy+1 
;DS18B20.c,310 :: 		LastDeviceFlag = 0;
0x053A	0x6B85      	CLRF        _LastDeviceFlag, 1
0x053C	0x6B86      	CLRF        _LastDeviceFlag+1, 1
;DS18B20.c,311 :: 		LastFamilyDiscrepancy = 0;
0x053E	0x6B81      	CLRF        _LastFamilyDiscrepancy, 1
0x0540	0x6B82      	CLRF        _LastFamilyDiscrepancy+1, 1
;DS18B20.c,312 :: 		search_result = 0;
0x0542	0x6B83      	CLRF        _search_result, 1
0x0544	0x6B84      	CLRF        _search_result+1, 1
;DS18B20.c,313 :: 		}
L_search46:
;DS18B20.c,314 :: 		return search_result;
0x0546	0xF000C083  	MOVFF       _search_result, R0
0x054A	0xF001C084  	MOVFF       _search_result+1, R1
;DS18B20.c,315 :: 		}
L_end_search:
0x054E	0x0012      	RETURN      0
; end of _search
_Ow_Read:
;__Lib_OneWire.c,26 :: 		
;__Lib_OneWire.c,29 :: 		
0x0550	0xF001C0D7  	MOVFF       FARG_Ow_Read_pin, R1
0x0554	0x0E01      	MOVLW       1
0x0556	0x6E00      	MOVWF       R0 
0x0558	0x5001      	MOVF        R1, 0 
L__Ow_Read12:
0x055A	0xE004      	BZ          L__Ow_Read13
0x055C	0x3600      	RLCF        R0, 1 
0x055E	0x9000      	BCF         R0, 0 
0x0560	0x0FFF      	ADDLW       255
0x0562	0xD7FB      	BRA         L__Ow_Read12
L__Ow_Read13:
0x0564	0xF0DBC000  	MOVFF       R0, Ow_Read_bit_mask_1_L0
;__Lib_OneWire.c,30 :: 		
0x0568	0x1C00      	COMF        R0, 0 
0x056A	0x0100      	MOVLB       0
0x056C	0x6FDA      	MOVWF       Ow_Read_bit_mask_0_L0, 1
;__Lib_OneWire.c,32 :: 		
0x056E	0x6BD9      	CLRF        Ow_Read_tmp_L0, 1
;__Lib_OneWire.c,33 :: 		
0x0570	0xFFE9C0D5  	MOVFF       FARG_Ow_Read_port, FSR0L
0x0574	0xFFEAC0D6  	MOVFF       FARG_Ow_Read_port+1, FSR0H
;__Lib_OneWire.c,35 :: 		
0x0578	0x6BD8      	CLRF        Ow_Read_i_L0, 1
L_Ow_Read0:
0x057A	0x51D8      	MOVF        Ow_Read_i_L0, 0, 1
0x057C	0x0807      	SUBLW       7
0x057E	0xE320      	BNC         L_Ow_Read1
;__Lib_OneWire.c,36 :: 		
0x0580	0x51DA      	MOVF        Ow_Read_bit_mask_0_L0, 0, 1
0x0582	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,38 :: 		
0x0584	0x0E12      	MOVLW       18
0x0586	0x26E9      	ADDWF       FSR0L, 1 
;__Lib_OneWire.c,39 :: 		
0x0588	0x51DA      	MOVF        Ow_Read_bit_mask_0_L0, 0, 1
0x058A	0x16EF      	ANDWF       INDF0, 1 
;__Lib_OneWire.c,40 :: 		
0x058C	0xDD95      	RCALL       _Delay_1us
;__Lib_OneWire.c,42 :: 		
0x058E	0x51DB      	MOVF        Ow_Read_bit_mask_1_L0, 0, 1
0x0590	0x12EF      	IORWF       INDF0, 1 
;__Lib_OneWire.c,43 :: 		
0x0592	0xDD92      	RCALL       _Delay_1us
;__Lib_OneWire.c,45 :: 		
0x0594	0x0E12      	MOVLW       18
0x0596	0x5EE9      	SUBWF       FSR0L, 1 
;__Lib_OneWire.c,46 :: 		
0x0598	0x51DB      	MOVF        Ow_Read_bit_mask_1_L0, 0, 1
0x059A	0x14EF      	ANDWF       INDF0, 0 
0x059C	0x6E00      	MOVWF       R0 
0x059E	0xE00C      	BZ          L_Ow_Read3
;__Lib_OneWire.c,47 :: 		
0x05A0	0xF001C0D8  	MOVFF       Ow_Read_i_L0, R1
0x05A4	0x0E01      	MOVLW       1
0x05A6	0x6E00      	MOVWF       R0 
0x05A8	0x5001      	MOVF        R1, 0 
L__Ow_Read14:
0x05AA	0xE004      	BZ          L__Ow_Read15
0x05AC	0x3600      	RLCF        R0, 1 
0x05AE	0x9000      	BCF         R0, 0 
0x05B0	0x0FFF      	ADDLW       255
0x05B2	0xD7FB      	BRA         L__Ow_Read14
L__Ow_Read15:
0x05B4	0x5000      	MOVF        R0, 0 
0x05B6	0x13D9      	IORWF       Ow_Read_tmp_L0, 1, 1
L_Ow_Read3:
;__Lib_OneWire.c,49 :: 		
0x05B8	0xDD4F      	RCALL       _Delay_50us
;__Lib_OneWire.c,50 :: 		
0x05BA	0xDD4E      	RCALL       _Delay_50us
;__Lib_OneWire.c,35 :: 		
0x05BC	0x2BD8      	INCF        Ow_Read_i_L0, 1, 1
;__Lib_OneWire.c,51 :: 		
0x05BE	0xD7DD      	BRA         L_Ow_Read0
L_Ow_Read1:
;__Lib_OneWire.c,52 :: 		
0x05C0	0xF000C0D9  	MOVFF       Ow_Read_tmp_L0, R0
;__Lib_OneWire.c,53 :: 		
L_end_Ow_Read:
0x05C4	0x0012      	RETURN      0
; end of _Ow_Read
_TEMPtoTEXT:
;DS18B20.c,156 :: 		void TEMPtoTEXT() {
;DS18B20.c,158 :: 		if (iTemp & 0x8000) {
0x05C6	0x0100      	MOVLB       0
0x05C8	0xAFA1      	BTFSS       _iTemp+1, 7, 1
0x05CA	0xD00A      	BRA         L_TEMPtoTEXT17
;DS18B20.c,159 :: 		ctext[0] = '-';
0x05CC	0xFFE1C052  	MOVFF       _ctext, FSR1L
0x05D0	0xFFE2C053  	MOVFF       _ctext+1, FSR1H
0x05D4	0x0E2D      	MOVLW       45
0x05D6	0x6EE6      	MOVWF       POSTINC1 
;DS18B20.c,160 :: 		iTemp = ~iTemp + 1;
0x05D8	0x1FA0      	COMF        _iTemp, 1, 1
0x05DA	0x1FA1      	COMF        _iTemp+1, 1, 1
0x05DC	0x4BA0      	INFSNZ      _iTemp, 1, 1
0x05DE	0x2BA1      	INCF        _iTemp+1, 1, 1
;DS18B20.c,161 :: 		}
L_TEMPtoTEXT17:
;DS18B20.c,164 :: 		temp_whole = iTemp >> sRES_SHIFT ;
0x05E0	0xF002C051  	MOVFF       _sRES_SHIFT, R2
0x05E4	0xF000C0A0  	MOVFF       _iTemp, R0
0x05E8	0xF001C0A1  	MOVFF       _iTemp+1, R1
0x05EC	0x5002      	MOVF        R2, 0 
L__TEMPtoTEXT73:
0x05EE	0xE005      	BZ          L__TEMPtoTEXT74
0x05F0	0x3201      	RRCF        R1, 1 
0x05F2	0x3200      	RRCF        R0, 1 
0x05F4	0x9E01      	BCF         R1, 7 
0x05F6	0x0FFF      	ADDLW       255
0x05F8	0xD7FA      	BRA         L__TEMPtoTEXT73
L__TEMPtoTEXT74:
0x05FA	0xF09FC000  	MOVFF       R0, _temp_whole
;DS18B20.c,167 :: 		if (temp_whole/100)
0x05FE	0x0E64      	MOVLW       100
0x0600	0x6E04      	MOVWF       R4 
0x0602	0xDDAE      	RCALL       _Div_8X8_U
0x0604	0x5200      	MOVF        R0, 1 
0x0606	0xE00D      	BZ          L_TEMPtoTEXT18
;DS18B20.c,168 :: 		ctext[0] = temp_whole/100  + 48;
0x0608	0x0E64      	MOVLW       100
0x060A	0x6E04      	MOVWF       R4 
0x060C	0xF000C09F  	MOVFF       _temp_whole, R0
0x0610	0xDDA7      	RCALL       _Div_8X8_U
0x0612	0xFFE1C052  	MOVFF       _ctext, FSR1L
0x0616	0xFFE2C053  	MOVFF       _ctext+1, FSR1H
0x061A	0x0E30      	MOVLW       48
0x061C	0x2400      	ADDWF       R0, 0 
0x061E	0x6EE6      	MOVWF       POSTINC1 
0x0620	0xD006      	BRA         L_TEMPtoTEXT19
L_TEMPtoTEXT18:
;DS18B20.c,170 :: 		ctext[0] = '0';
0x0622	0xFFE1C052  	MOVFF       _ctext, FSR1L
0x0626	0xFFE2C053  	MOVFF       _ctext+1, FSR1H
0x062A	0x0E30      	MOVLW       48
0x062C	0x6EE6      	MOVWF       POSTINC1 
L_TEMPtoTEXT19:
;DS18B20.c,172 :: 		ctext[1] = (temp_whole/10)%10 + 48;             // Extract tens digit
0x062E	0x0E01      	MOVLW       1
0x0630	0x2452      	ADDWF       _ctext, 0 
0x0632	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x0634	0x0E00      	MOVLW       0
0x0636	0x2053      	ADDWFC      _ctext+1, 0 
0x0638	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x063A	0x0E0A      	MOVLW       10
0x063C	0x6E04      	MOVWF       R4 
0x063E	0xF000C09F  	MOVFF       _temp_whole, R0
0x0642	0xDD8E      	RCALL       _Div_8X8_U
0x0644	0x0E0A      	MOVLW       10
0x0646	0x6E04      	MOVWF       R4 
0x0648	0xDD8B      	RCALL       _Div_8X8_U
0x064A	0xF000C008  	MOVFF       R8, R0
0x064E	0x0E30      	MOVLW       48
0x0650	0x2600      	ADDWF       R0, 1 
0x0652	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x0656	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x065A	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,173 :: 		ctext[2] =  temp_whole%10     + 48;             // Extract ones digit
0x065E	0x0E02      	MOVLW       2
0x0660	0x2452      	ADDWF       _ctext, 0 
0x0662	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x0664	0x0E00      	MOVLW       0
0x0666	0x2053      	ADDWFC      _ctext+1, 0 
0x0668	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x066A	0x0E0A      	MOVLW       10
0x066C	0x6E04      	MOVWF       R4 
0x066E	0xF000C09F  	MOVFF       _temp_whole, R0
0x0672	0xDD76      	RCALL       _Div_8X8_U
0x0674	0xF000C008  	MOVFF       R8, R0
0x0678	0x0E30      	MOVLW       48
0x067A	0x2600      	ADDWF       R0, 1 
0x067C	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x0680	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x0684	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,176 :: 		temp_fraction  = iTemp << (4-sRES_SHIFT);
0x0688	0x5051      	MOVF        _sRES_SHIFT, 0 
0x068A	0x0804      	SUBLW       4
0x068C	0x6E00      	MOVWF       R0 
0x068E	0x6A01      	CLRF        R1 
0x0690	0x0E00      	MOVLW       0
0x0692	0x5A01      	SUBWFB      R1, 1 
0x0694	0xF002C000  	MOVFF       R0, R2
0x0698	0xF000C0A0  	MOVFF       _iTemp, R0
0x069C	0xF001C0A1  	MOVFF       _iTemp+1, R1
0x06A0	0x5002      	MOVF        R2, 0 
L__TEMPtoTEXT75:
0x06A2	0xE005      	BZ          L__TEMPtoTEXT76
0x06A4	0x3600      	RLCF        R0, 1 
0x06A6	0x9000      	BCF         R0, 0 
0x06A8	0x3601      	RLCF        R1, 1 
0x06AA	0x0FFF      	ADDLW       255
0x06AC	0xD7FA      	BRA         L__TEMPtoTEXT75
L__TEMPtoTEXT76:
0x06AE	0xF0A2C000  	MOVFF       R0, _temp_fraction
0x06B2	0xF0A3C001  	MOVFF       R1, _temp_fraction+1
;DS18B20.c,177 :: 		temp_fraction &= 0x000F;
0x06B6	0x0E0F      	MOVLW       15
0x06B8	0x1600      	ANDWF       R0, 1 
0x06BA	0x0E00      	MOVLW       0
0x06BC	0x1601      	ANDWF       R1, 1 
0x06BE	0xF0A2C000  	MOVFF       R0, _temp_fraction
0x06C2	0xF0A3C001  	MOVFF       R1, _temp_fraction+1
;DS18B20.c,178 :: 		temp_fraction *= 625;
0x06C6	0x0E71      	MOVLW       113
0x06C8	0x6E04      	MOVWF       R4 
0x06CA	0x0E02      	MOVLW       2
0x06CC	0x6E05      	MOVWF       R5 
0x06CE	0xDD95      	RCALL       _Mul_16X16_U
0x06D0	0xF0A2C000  	MOVFF       R0, _temp_fraction
0x06D4	0xF0A3C001  	MOVFF       R1, _temp_fraction+1
;DS18B20.c,181 :: 		ctext[4] =  temp_fraction/1000    + 48;         // Extract thousands digit
0x06D8	0x0E04      	MOVLW       4
0x06DA	0x2452      	ADDWF       _ctext, 0 
0x06DC	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x06DE	0x0E00      	MOVLW       0
0x06E0	0x2053      	ADDWFC      _ctext+1, 0 
0x06E2	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x06E4	0x0EE8      	MOVLW       232
0x06E6	0x6E04      	MOVWF       R4 
0x06E8	0x0E03      	MOVLW       3
0x06EA	0x6E05      	MOVWF       R5 
0x06EC	0xDDAE      	RCALL       _Div_16X16_U
0x06EE	0x0E30      	MOVLW       48
0x06F0	0x2600      	ADDWF       R0, 1 
0x06F2	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x06F6	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x06FA	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,182 :: 		ctext[5] = (temp_fraction/100)%10 + 48;         // Extract hundreds digit
0x06FE	0x0E05      	MOVLW       5
0x0700	0x2452      	ADDWF       _ctext, 0 
0x0702	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x0704	0x0E00      	MOVLW       0
0x0706	0x2053      	ADDWFC      _ctext+1, 0 
0x0708	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x070A	0x0E64      	MOVLW       100
0x070C	0x6E04      	MOVWF       R4 
0x070E	0x0E00      	MOVLW       0
0x0710	0x6E05      	MOVWF       R5 
0x0712	0xF000C0A2  	MOVFF       _temp_fraction, R0
0x0716	0xF001C0A3  	MOVFF       _temp_fraction+1, R1
0x071A	0xDD97      	RCALL       _Div_16X16_U
0x071C	0x0E0A      	MOVLW       10
0x071E	0x6E04      	MOVWF       R4 
0x0720	0x0E00      	MOVLW       0
0x0722	0x6E05      	MOVWF       R5 
0x0724	0xDD92      	RCALL       _Div_16X16_U
0x0726	0xF000C008  	MOVFF       R8, R0
0x072A	0xF001C009  	MOVFF       R9, R1
0x072E	0x0E30      	MOVLW       48
0x0730	0x2600      	ADDWF       R0, 1 
0x0732	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x0736	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x073A	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,183 :: 		ctext[6] = (temp_fraction/10)%10  + 48;         // Extract tens digit
0x073E	0x0E06      	MOVLW       6
0x0740	0x2452      	ADDWF       _ctext, 0 
0x0742	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x0744	0x0E00      	MOVLW       0
0x0746	0x2053      	ADDWFC      _ctext+1, 0 
0x0748	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x074A	0x0E0A      	MOVLW       10
0x074C	0x6E04      	MOVWF       R4 
0x074E	0x0E00      	MOVLW       0
0x0750	0x6E05      	MOVWF       R5 
0x0752	0xF000C0A2  	MOVFF       _temp_fraction, R0
0x0756	0xF001C0A3  	MOVFF       _temp_fraction+1, R1
0x075A	0xDD77      	RCALL       _Div_16X16_U
0x075C	0x0E0A      	MOVLW       10
0x075E	0x6E04      	MOVWF       R4 
0x0760	0x0E00      	MOVLW       0
0x0762	0x6E05      	MOVWF       R5 
0x0764	0xDD72      	RCALL       _Div_16X16_U
0x0766	0xF000C008  	MOVFF       R8, R0
0x076A	0xF001C009  	MOVFF       R9, R1
0x076E	0x0E30      	MOVLW       48
0x0770	0x2600      	ADDWF       R0, 1 
0x0772	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x0776	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x077A	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,184 :: 		ctext[7] =  temp_fraction%10      + 48;         // Extract ones digit
0x077E	0x0E07      	MOVLW       7
0x0780	0x2452      	ADDWF       _ctext, 0 
0x0782	0x6FD5      	MOVWF       FLOC__TEMPtoTEXT, 1
0x0784	0x0E00      	MOVLW       0
0x0786	0x2053      	ADDWFC      _ctext+1, 0 
0x0788	0x6FD6      	MOVWF       FLOC__TEMPtoTEXT+1, 1
0x078A	0x0E0A      	MOVLW       10
0x078C	0x6E04      	MOVWF       R4 
0x078E	0x0E00      	MOVLW       0
0x0790	0x6E05      	MOVWF       R5 
0x0792	0xF000C0A2  	MOVFF       _temp_fraction, R0
0x0796	0xF001C0A3  	MOVFF       _temp_fraction+1, R1
0x079A	0xDD57      	RCALL       _Div_16X16_U
0x079C	0xF000C008  	MOVFF       R8, R0
0x07A0	0xF001C009  	MOVFF       R9, R1
0x07A4	0x0E30      	MOVLW       48
0x07A6	0x2600      	ADDWF       R0, 1 
0x07A8	0xFFE1C0D5  	MOVFF       FLOC__TEMPtoTEXT, FSR1L
0x07AC	0xFFE2C0D6  	MOVFF       FLOC__TEMPtoTEXT+1, FSR1H
0x07B0	0xFFE6C000  	MOVFF       R0, POSTINC1
;DS18B20.c,186 :: 		}
L_end_TEMPtoTEXT:
0x07B4	0x0012      	RETURN      0
; end of _TEMPtoTEXT
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x07B6	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x07B8	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x07BA	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x07BC	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x07BE	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x07C0	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x07C2	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x07C4	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x07C6	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x07C8	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x07CA	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x07CC	0x0012      	RETURN      0
; end of _____DoIFC
_ByteToHex:
;__Lib_Conversions.c,5 :: 		
;__Lib_Conversions.c,6 :: 		
0x07CE	0xF000C0D5  	MOVFF       FARG_ByteToHex_input, R0
0x07D2	0x3200      	RRCF        R0, 1 
0x07D4	0x9E00      	BCF         R0, 7 
0x07D6	0x3200      	RRCF        R0, 1 
0x07D8	0x9E00      	BCF         R0, 7 
0x07DA	0x3200      	RRCF        R0, 1 
0x07DC	0x9E00      	BCF         R0, 7 
0x07DE	0x3200      	RRCF        R0, 1 
0x07E0	0x9E00      	BCF         R0, 7 
0x07E2	0x0E8E      	MOVLW       __Lib_Conversions_Digits
0x07E4	0x2400      	ADDWF       R0, 0 
0x07E6	0x6EF6      	MOVWF       4086 
0x07E8	0x0E11      	MOVLW       hi_addr(__Lib_Conversions_Digits)
0x07EA	0x6EF7      	MOVWF       TBLPTRH 
0x07EC	0x0E00      	MOVLW       0
0x07EE	0x22F7      	ADDWFC      TBLPTRH, 1 
0x07F0	0x0E00      	MOVLW       higher_addr(__Lib_Conversions_Digits)
0x07F2	0x6EF8      	MOVWF       TBLPTRU 
0x07F4	0x0E00      	MOVLW       0
0x07F6	0x22F8      	ADDWFC      TBLPTRU, 1 
0x07F8	0x0009      	TBLRD*+
0x07FA	0xF000CFF5  	MOVFF       TABLAT, R0
0x07FE	0xFFE1C0D6  	MOVFF       FARG_ByteToHex_output, FSR1L
0x0802	0xFFE2C0D7  	MOVFF       FARG_ByteToHex_output+1, FSR1H
0x0806	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,7 :: 		
0x080A	0x0E01      	MOVLW       1
0x080C	0x0100      	MOVLB       0
0x080E	0x25D6      	ADDWF       FARG_ByteToHex_output, 0, 1
0x0810	0x6EE1      	MOVWF       FSR1L 
0x0812	0x0E00      	MOVLW       0
0x0814	0x21D7      	ADDWFC      FARG_ByteToHex_output+1, 0, 1
0x0816	0x6EE2      	MOVWF       FSR1H 
0x0818	0x0E0F      	MOVLW       15
0x081A	0x15D5      	ANDWF       FARG_ByteToHex_input, 0, 1
0x081C	0x6E00      	MOVWF       R0 
0x081E	0x0E8E      	MOVLW       __Lib_Conversions_Digits
0x0820	0x2400      	ADDWF       R0, 0 
0x0822	0x6EF6      	MOVWF       4086 
0x0824	0x0E11      	MOVLW       hi_addr(__Lib_Conversions_Digits)
0x0826	0x6EF7      	MOVWF       TBLPTRH 
0x0828	0x0E00      	MOVLW       0
0x082A	0x22F7      	ADDWFC      TBLPTRH, 1 
0x082C	0x0E00      	MOVLW       higher_addr(__Lib_Conversions_Digits)
0x082E	0x6EF8      	MOVWF       TBLPTRU 
0x0830	0x0E00      	MOVLW       0
0x0832	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0834	0x0009      	TBLRD*+
0x0836	0xF000CFF5  	MOVFF       TABLAT, R0
0x083A	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,8 :: 		
0x083E	0x0E02      	MOVLW       2
0x0840	0x25D6      	ADDWF       FARG_ByteToHex_output, 0, 1
0x0842	0x6EE1      	MOVWF       FSR1L 
0x0844	0x0E00      	MOVLW       0
0x0846	0x21D7      	ADDWFC      FARG_ByteToHex_output+1, 0, 1
0x0848	0x6EE2      	MOVWF       FSR1H 
0x084A	0x6AE6      	CLRF        POSTINC1 
;__Lib_Conversions.c,9 :: 		
L_end_ByteToHex:
0x084C	0x0012      	RETURN      0
; end of _ByteToHex
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x084E	0x0100      	MOVLB       0
0x0850	0x6BD8      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0852	0xFFE9C0D5  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0856	0xFFEAC0D6  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x085A	0xF0D7CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x085E	0x51D7      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0860	0x0A00      	XORLW       0
0x0862	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x0864	0xF0DCC0D7  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0868	0xDC29      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x086A	0x0100      	MOVLB       0
0x086C	0x2BD8      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x086E	0x51D8      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0870	0x25D5      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0872	0x6EE9      	MOVWF       FSR0L 
0x0874	0x0E00      	MOVLW       0
0x0876	0x21D6      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x0878	0x6EEA      	MOVWF       FSR0H 
0x087A	0xF0D7CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x087E	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x0880	0x0012      	RETURN      0
; end of _UART1_Write_Text
_init:
;Silo.c,44 :: 		void init(){
;Silo.c,45 :: 		PORTD = 0xFF;
0x0882	0x0EFF      	MOVLW       255
0x0884	0x6E83      	MOVWF       PORTD 
;Silo.c,46 :: 		TRISD = 0;
0x0886	0x6A95      	CLRF        TRISD 
;Silo.c,47 :: 		TRISA.B0=0;
0x0888	0x9092      	BCF         TRISA, 0 
;Silo.c,49 :: 		UART1_Init(9600);               // Initialize UART module at 9600 bps
0x088A	0x0E19      	MOVLW       25
0x088C	0x6EAF      	MOVWF       SPBRG 
0x088E	0x84AC      	BSF         TXSTA, 2, 0
0x0890	0xDD11      	RCALL       _UART1_Init
;Silo.c,50 :: 		Delay_ms(100);
0x0892	0x0E82      	MOVLW       130
0x0894	0x6E0C      	MOVWF       R12, 0
0x0896	0x0EDD      	MOVLW       221
0x0898	0x6E0D      	MOVWF       R13, 0
L_init0:
0x089A	0x2E0D      	DECFSZ      R13, 1, 0
0x089C	0xD7FE      	BRA         L_init0
0x089E	0x2E0C      	DECFSZ      R12, 1, 0
0x08A0	0xD7FC      	BRA         L_init0
0x08A2	0x0000      	NOP
0x08A4	0x0000      	NOP
;Silo.c,51 :: 		RS485Slave_Init(160);              // Intialize MCU as slave, address 160
0x08A6	0x0EA0      	MOVLW       160
0x08A8	0x6FD5      	MOVWF       FARG_RS485Slave_Init_slave_address, 1
0x08AA	0xDD30      	RCALL       _RS485Slave_Init
;Silo.c,53 :: 		dat[4] = 0;                        // ensure that message received flag is 0
0x08AC	0x6A70      	CLRF        _dat+4 
;Silo.c,54 :: 		dat[5] = 0;                        // ensure that message received flag is 0
0x08AE	0x6A71      	CLRF        _dat+5 
;Silo.c,55 :: 		dat[6] = 0;                        // ensure that error flag is 0
0x08B0	0x6A72      	CLRF        _dat+6 
;Silo.c,57 :: 		RCIE_bit = 1;                      // enable interrupt on UART1 receive
0x08B2	0x8A9D      	BSF         RCIE_bit, BitPos(RCIE_bit+0) 
;Silo.c,58 :: 		TXIE_bit = 0;                      // disable interrupt on UART1 transmit
0x08B4	0x989D      	BCF         TXIE_bit, BitPos(TXIE_bit+0) 
;Silo.c,59 :: 		PEIE_bit = 1;                      // enable peripheral interrupts
0x08B6	0x8CF2      	BSF         PEIE_bit, BitPos(PEIE_bit+0) 
;Silo.c,60 :: 		GIE_bit = 1;                       // enable all interrupts
0x08B8	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;Silo.c,66 :: 		}
L_end_init:
0x08BA	0x0012      	RETURN      0
; end of _init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x08BC	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x08BE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x08C2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x08C4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x08C6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x08C8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x08CA	0x0012      	RETURN      0
; end of ___CC2DW
_RS485Slave_Receive:
;__Lib_RS485.c,69 :: 		
;__Lib_RS485.c,73 :: 		
0x08CC	0xF000C08B  	MOVFF       _UART_Rdy_Ptr, R0
0x08D0	0xF001C08C  	MOVFF       _UART_Rdy_Ptr+1, R1
0x08D4	0xDF70      	RCALL       _____DoIFC
0x08D6	0x5200      	MOVF        R0, 1 
0x08D8	0xE101      	BNZ         L_RS485Slave_Receive3
;__Lib_RS485.c,74 :: 		
0x08DA	0xD11D      	BRA         L_end_RS485Slave_Receive
L_RS485Slave_Receive3:
;__Lib_RS485.c,75 :: 		
0x08DC	0xF000C087  	MOVFF       _UART_Rd_Ptr, R0
0x08E0	0xF001C088  	MOVFF       _UART_Rd_Ptr+1, R1
0x08E4	0xDF68      	RCALL       _____DoIFC
0x08E6	0xF094C000  	MOVFF       R0, RS485Slave_Receive_rec_L0
;__Lib_RS485.c,77 :: 		
0x08EA	0xD0FA      	BRA         L_RS485Slave_Receive4
;__Lib_RS485.c,78 :: 		
L_RS485Slave_Receive6:
;__Lib_RS485.c,79 :: 		
0x08EC	0x0100      	MOVLB       0
0x08EE	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x08F0	0x0A96      	XORLW       150
0x08F2	0xE103      	BNZ         L_RS485Slave_Receive7
;__Lib_RS485.c,80 :: 		
0x08F4	0x0E02      	MOVLW       2
0x08F6	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,81 :: 		
0x08F8	0x6B93      	CLRF        RS485Slave_Receive_crc_is_ok_L0, 1
;__Lib_RS485.c,82 :: 		
L_RS485Slave_Receive7:
;__Lib_RS485.c,83 :: 		
0x08FA	0xD10D      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,86 :: 		
L_RS485Slave_Receive8:
0x08FC	0x0100      	MOVLB       0
;__Lib_RS485.c,87 :: 		
0x08FE	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0900	0x199E      	XORWF       __Lib_RS485__sladdress, 0, 1
0x0902	0xE004      	BZ          L__RS485Slave_Receive106
0x0904	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0906	0x0A32      	XORLW       50
0x0908	0xE001      	BZ          L__RS485Slave_Receive106
0x090A	0xD005      	BRA         L_RS485Slave_Receive11
L__RS485Slave_Receive106:
;__Lib_RS485.c,88 :: 		
0x090C	0x0E03      	MOVLW       3
0x090E	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,90 :: 		
0x0910	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0912	0x1B93      	XORWF       RS485Slave_Receive_crc_is_ok_L0, 1, 1
;__Lib_RS485.c,91 :: 		
0x0914	0xD002      	BRA         L_RS485Slave_Receive12
L_RS485Slave_Receive11:
;__Lib_RS485.c,93 :: 		
0x0916	0x0E01      	MOVLW       1
0x0918	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,94 :: 		
L_RS485Slave_Receive12:
;__Lib_RS485.c,95 :: 		
0x091A	0xD0FD      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,97 :: 		
L_RS485Slave_Receive13:
0x091C	0x0100      	MOVLB       0
;__Lib_RS485.c,98 :: 		
0x091E	0x5399      	MOVF        __Lib_RS485_specadr, 1, 1
0x0920	0xE009      	BZ          L_RS485Slave_Receive14
;__Lib_RS485.c,99 :: 		
0x0922	0x0E40      	MOVLW       64
0x0924	0x1594      	ANDWF       RS485Slave_Receive_rec_L0, 0, 1
0x0926	0x6E01      	MOVWF       R1 
0x0928	0x5001      	MOVF        R1, 0 
0x092A	0x0A00      	XORLW       0
0x092C	0xE103      	BNZ         L_RS485Slave_Receive15
;__Lib_RS485.c,100 :: 		
0x092E	0x0E01      	MOVLW       1
0x0930	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,101 :: 		
0x0932	0xD0F1      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,102 :: 		
L_RS485Slave_Receive15:
L_RS485Slave_Receive14:
;__Lib_RS485.c,104 :: 		
0x0934	0xAF94      	BTFSS       RS485Slave_Receive_rec_L0, 7, 1
0x0936	0xD013      	BRA         L_RS485Slave_Receive16
;__Lib_RS485.c,105 :: 		
0x0938	0x0E04      	MOVLW       4
0x093A	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,106 :: 		
0x093C	0xF080C094  	MOVFF       RS485Slave_Receive_rec_L0, RS485Slave_Receive_key_L0
;__Lib_RS485.c,107 :: 		
0x0940	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0942	0x1B93      	XORWF       RS485Slave_Receive_crc_is_ok_L0, 1, 1
;__Lib_RS485.c,108 :: 		
0x0944	0x0E03      	MOVLW       3
0x0946	0x1594      	ANDWF       RS485Slave_Receive_rec_L0, 0, 1
0x0948	0x6E01      	MOVWF       R1 
0x094A	0xF095C001  	MOVFF       R1, RS485Slave_Receive_datalen_L0
;__Lib_RS485.c,109 :: 		
0x094E	0x5001      	MOVF        R1, 0 
0x0950	0x0A00      	XORLW       0
0x0952	0xE102      	BNZ         L_RS485Slave_Receive17
;__Lib_RS485.c,110 :: 		
0x0954	0x0E05      	MOVLW       5
0x0956	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
L_RS485Slave_Receive17:
;__Lib_RS485.c,111 :: 		
0x0958	0x0E01      	MOVLW       1
0x095A	0x6F96      	MOVWF       RS485Slave_Receive_i_L0, 1
;__Lib_RS485.c,112 :: 		
0x095C	0xD00A      	BRA         L_RS485Slave_Receive18
L_RS485Slave_Receive16:
;__Lib_RS485.c,114 :: 		
0x095E	0x0E05      	MOVLW       5
0x0960	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0962	0x6EE1      	MOVWF       FSR1L 
0x0964	0x0E00      	MOVLW       0
0x0966	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0968	0x6EE2      	MOVWF       FSR1H 
0x096A	0x0EFF      	MOVLW       255
0x096C	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,115 :: 		
0x096E	0x0E01      	MOVLW       1
0x0970	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,116 :: 		
L_RS485Slave_Receive18:
;__Lib_RS485.c,117 :: 		
0x0972	0xD0D1      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,119 :: 		
L_RS485Slave_Receive19:
0x0974	0x0100      	MOVLB       0
;__Lib_RS485.c,120 :: 		
0x0976	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0978	0x0AA9      	XORLW       169
0x097A	0xE10B      	BNZ         L_RS485Slave_Receive20
;__Lib_RS485.c,121 :: 		
0x097C	0x0E05      	MOVLW       5
0x097E	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0980	0x6EE1      	MOVWF       FSR1L 
0x0982	0x0E00      	MOVLW       0
0x0984	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0986	0x6EE2      	MOVWF       FSR1H 
0x0988	0x0EFF      	MOVLW       255
0x098A	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,122 :: 		
0x098C	0x0E01      	MOVLW       1
0x098E	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,123 :: 		
0x0990	0xD0C2      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,124 :: 		
L_RS485Slave_Receive20:
;__Lib_RS485.c,125 :: 		
0x0992	0x5196      	MOVF        RS485Slave_Receive_i_L0, 0, 1
0x0994	0x5D95      	SUBWF       RS485Slave_Receive_datalen_L0, 0, 1
0x0996	0x6E00      	MOVWF       R0 
0x0998	0x6A01      	CLRF        R1 
0x099A	0x0E00      	MOVLW       0
0x099C	0x5A01      	SUBWFB      R1, 1 
0x099E	0x5000      	MOVF        R0, 0 
0x09A0	0x1001      	IORWF       R1, 0 
0x09A2	0xE011      	BZ          L_RS485Slave_Receive21
;__Lib_RS485.c,126 :: 		
0x09A4	0x0596      	DECF        RS485Slave_Receive_i_L0, 0, 1
0x09A6	0x6E00      	MOVWF       R0 
0x09A8	0x6A01      	CLRF        R1 
0x09AA	0x0E00      	MOVLW       0
0x09AC	0x5A01      	SUBWFB      R1, 1 
0x09AE	0x5000      	MOVF        R0, 0 
0x09B0	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x09B2	0x6EE1      	MOVWF       FSR1L 
0x09B4	0x5001      	MOVF        R1, 0 
0x09B6	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x09B8	0x6EE2      	MOVWF       FSR1H 
0x09BA	0xFFE6C094  	MOVFF       RS485Slave_Receive_rec_L0, POSTINC1
;__Lib_RS485.c,127 :: 		
0x09BE	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x09C0	0x1B93      	XORWF       RS485Slave_Receive_crc_is_ok_L0, 1, 1
;__Lib_RS485.c,128 :: 		
0x09C2	0x2B96      	INCF        RS485Slave_Receive_i_L0, 1, 1
;__Lib_RS485.c,129 :: 		
0x09C4	0xD011      	BRA         L_RS485Slave_Receive22
L_RS485Slave_Receive21:
;__Lib_RS485.c,131 :: 		
0x09C6	0x0596      	DECF        RS485Slave_Receive_i_L0, 0, 1
0x09C8	0x6E00      	MOVWF       R0 
0x09CA	0x6A01      	CLRF        R1 
0x09CC	0x0E00      	MOVLW       0
0x09CE	0x5A01      	SUBWFB      R1, 1 
0x09D0	0x5000      	MOVF        R0, 0 
0x09D2	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x09D4	0x6EE1      	MOVWF       FSR1L 
0x09D6	0x5001      	MOVF        R1, 0 
0x09D8	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x09DA	0x6EE2      	MOVWF       FSR1H 
0x09DC	0xFFE6C094  	MOVFF       RS485Slave_Receive_rec_L0, POSTINC1
;__Lib_RS485.c,132 :: 		
0x09E0	0x0E05      	MOVLW       5
0x09E2	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,133 :: 		
0x09E4	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x09E6	0x1B93      	XORWF       RS485Slave_Receive_crc_is_ok_L0, 1, 1
;__Lib_RS485.c,134 :: 		
L_RS485Slave_Receive22:
;__Lib_RS485.c,135 :: 		
0x09E8	0xD096      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,137 :: 		
L_RS485Slave_Receive23:
0x09EA	0x0100      	MOVLB       0
;__Lib_RS485.c,138 :: 		
0x09EC	0x1D93      	COMF        RS485Slave_Receive_crc_is_ok_L0, 0, 1
0x09EE	0x6E01      	MOVWF       R1 
0x09F0	0xF093C001  	MOVFF       R1, RS485Slave_Receive_crc_is_ok_L0
;__Lib_RS485.c,139 :: 		
0x09F4	0x5001      	MOVF        R1, 0 
0x09F6	0x0A96      	XORLW       150
0x09F8	0xE004      	BZ          L__RS485Slave_Receive105
0x09FA	0x5193      	MOVF        RS485Slave_Receive_crc_is_ok_L0, 0, 1
0x09FC	0x0AA9      	XORLW       169
0x09FE	0xE001      	BZ          L__RS485Slave_Receive105
0x0A00	0xD001      	BRA         L_RS485Slave_Receive26
L__RS485Slave_Receive105:
;__Lib_RS485.c,140 :: 		
0x0A02	0x2B93      	INCF        RS485Slave_Receive_crc_is_ok_L0, 1, 1
L_RS485Slave_Receive26:
;__Lib_RS485.c,141 :: 		
0x0A04	0x5193      	MOVF        RS485Slave_Receive_crc_is_ok_L0, 0, 1
0x0A06	0x1994      	XORWF       RS485Slave_Receive_rec_L0, 0, 1
0x0A08	0xE103      	BNZ         L_RS485Slave_Receive27
;__Lib_RS485.c,142 :: 		
0x0A0A	0x0E06      	MOVLW       6
0x0A0C	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
0x0A0E	0xD00A      	BRA         L_RS485Slave_Receive28
L_RS485Slave_Receive27:
;__Lib_RS485.c,144 :: 		
0x0A10	0x0E05      	MOVLW       5
0x0A12	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0A14	0x6EE1      	MOVWF       FSR1L 
0x0A16	0x0E00      	MOVLW       0
0x0A18	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0A1A	0x6EE2      	MOVWF       FSR1H 
0x0A1C	0x0EFF      	MOVLW       255
0x0A1E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,145 :: 		
0x0A20	0x0E01      	MOVLW       1
0x0A22	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,146 :: 		
L_RS485Slave_Receive28:
;__Lib_RS485.c,147 :: 		
0x0A24	0xD078      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,149 :: 		
L_RS485Slave_Receive29:
0x0A26	0x0100      	MOVLB       0
;__Lib_RS485.c,150 :: 		
0x0A28	0x5194      	MOVF        RS485Slave_Receive_rec_L0, 0, 1
0x0A2A	0x0AA9      	XORLW       169
0x0A2C	0xE13F      	BNZ         L_RS485Slave_Receive30
;__Lib_RS485.c,151 :: 		
0x0A2E	0x0E01      	MOVLW       1
0x0A30	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,152 :: 		
0x0A32	0x0E04      	MOVLW       4
0x0A34	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0A36	0x6EE1      	MOVWF       FSR1L 
0x0A38	0x0E00      	MOVLW       0
0x0A3A	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0A3C	0x6EE2      	MOVWF       FSR1H 
0x0A3E	0x0EFF      	MOVLW       255
0x0A40	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,153 :: 		
0x0A42	0x0E03      	MOVLW       3
0x0A44	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0A46	0x6EE1      	MOVWF       FSR1L 
0x0A48	0x0E00      	MOVLW       0
0x0A4A	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0A4C	0x6EE2      	MOVWF       FSR1H 
0x0A4E	0xFFE6C095  	MOVFF       RS485Slave_Receive_datalen_L0, POSTINC1
;__Lib_RS485.c,154 :: 		
0x0A52	0x0E01      	MOVLW       1
0x0A54	0x6F96      	MOVWF       RS485Slave_Receive_i_L0, 1
L_RS485Slave_Receive31:
0x0A56	0x5196      	MOVF        RS485Slave_Receive_i_L0, 0, 1
0x0A58	0x5D95      	SUBWF       RS485Slave_Receive_datalen_L0, 0, 1
0x0A5A	0xE327      	BNC         L_RS485Slave_Receive32
;__Lib_RS485.c,156 :: 		
0x0A5C	0xF001C096  	MOVFF       RS485Slave_Receive_i_L0, R1
0x0A60	0x0E02      	MOVLW       2
0x0A62	0x6E00      	MOVWF       R0 
0x0A64	0x5001      	MOVF        R1, 0 
L__RS485Slave_Receive117:
0x0A66	0xE004      	BZ          L__RS485Slave_Receive118
0x0A68	0x3600      	RLCF        R0, 1 
0x0A6A	0x9000      	BCF         R0, 0 
0x0A6C	0x0FFF      	ADDLW       255
0x0A6E	0xD7FB      	BRA         L__RS485Slave_Receive117
L__RS485Slave_Receive118:
;__Lib_RS485.c,157 :: 		
0x0A70	0x5180      	MOVF        RS485Slave_Receive_key_L0, 0, 1
0x0A72	0x1600      	ANDWF       R0, 1 
0x0A74	0xE018      	BZ          L_RS485Slave_Receive34
;__Lib_RS485.c,158 :: 		
0x0A76	0x0596      	DECF        RS485Slave_Receive_i_L0, 0, 1
0x0A78	0x6E00      	MOVWF       R0 
0x0A7A	0x6A01      	CLRF        R1 
0x0A7C	0x0E00      	MOVLW       0
0x0A7E	0x5A01      	SUBWFB      R1, 1 
0x0A80	0x5000      	MOVF        R0, 0 
0x0A82	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0A84	0x6E02      	MOVWF       R2 
0x0A86	0x5001      	MOVF        R1, 0 
0x0A88	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0A8A	0x6E03      	MOVWF       R3 
0x0A8C	0xFFE9C002  	MOVFF       R2, FSR0L
0x0A90	0xFFEAC003  	MOVFF       R3, FSR0H
0x0A94	0x0E01      	MOVLW       1
0x0A96	0x18EE      	XORWF       POSTINC0, 0 
0x0A98	0x6E00      	MOVWF       R0 
0x0A9A	0xFFE1C002  	MOVFF       R2, FSR1L
0x0A9E	0xFFE2C003  	MOVFF       R3, FSR1H
0x0AA2	0xFFE6C000  	MOVFF       R0, POSTINC1
L_RS485Slave_Receive34:
;__Lib_RS485.c,154 :: 		
0x0AA6	0x2B96      	INCF        RS485Slave_Receive_i_L0, 1, 1
;__Lib_RS485.c,159 :: 		
0x0AA8	0xD7D6      	BRA         L_RS485Slave_Receive31
L_RS485Slave_Receive32:
;__Lib_RS485.c,160 :: 		
0x0AAA	0xD00A      	BRA         L_RS485Slave_Receive35
L_RS485Slave_Receive30:
;__Lib_RS485.c,163 :: 		
0x0AAC	0x0E05      	MOVLW       5
0x0AAE	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0AB0	0x6EE1      	MOVWF       FSR1L 
0x0AB2	0x0E00      	MOVLW       0
0x0AB4	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0AB6	0x6EE2      	MOVWF       FSR1H 
0x0AB8	0x0EFF      	MOVLW       255
0x0ABA	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,164 :: 		
0x0ABC	0x0E01      	MOVLW       1
0x0ABE	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,165 :: 		
L_RS485Slave_Receive35:
;__Lib_RS485.c,166 :: 		
0x0AC0	0xD02A      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,168 :: 		
L_RS485Slave_Receive36:
0x0AC2	0x0100      	MOVLB       0
;__Lib_RS485.c,169 :: 		
0x0AC4	0x0E05      	MOVLW       5
0x0AC6	0x25E3      	ADDWF       FARG_RS485Slave_Receive_data_buffer, 0, 1
0x0AC8	0x6EE1      	MOVWF       FSR1L 
0x0ACA	0x0E00      	MOVLW       0
0x0ACC	0x21E4      	ADDWFC      FARG_RS485Slave_Receive_data_buffer+1, 0, 1
0x0ACE	0x6EE2      	MOVWF       FSR1H 
0x0AD0	0x0EFF      	MOVLW       255
0x0AD2	0x6EE6      	MOVWF       POSTINC1 
;__Lib_RS485.c,170 :: 		
0x0AD4	0x0E01      	MOVLW       1
0x0AD6	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,171 :: 		
0x0AD8	0xD01E      	BRA         L_RS485Slave_Receive5
;__Lib_RS485.c,173 :: 		
L_RS485Slave_Receive37:
;__Lib_RS485.c,174 :: 		
0x0ADA	0x0E01      	MOVLW       1
0x0ADC	0x6E7F      	MOVWF       __Lib_RS485_sl_state 
;__Lib_RS485.c,176 :: 		
0x0ADE	0xD01B      	BRA         L_RS485Slave_Receive5
L_RS485Slave_Receive4:
0x0AE0	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0AE2	0x0A01      	XORLW       1
0x0AE4	0xB4D8      	BTFSC       STATUS, 2 
0x0AE6	0xD702      	BRA         L_RS485Slave_Receive6
0x0AE8	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0AEA	0x0A02      	XORLW       2
0x0AEC	0xB4D8      	BTFSC       STATUS, 2 
0x0AEE	0xD706      	BRA         L_RS485Slave_Receive8
0x0AF0	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0AF2	0x0A03      	XORLW       3
0x0AF4	0xB4D8      	BTFSC       STATUS, 2 
0x0AF6	0xD712      	BRA         L_RS485Slave_Receive13
0x0AF8	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0AFA	0x0A04      	XORLW       4
0x0AFC	0xB4D8      	BTFSC       STATUS, 2 
0x0AFE	0xD73A      	BRA         L_RS485Slave_Receive19
0x0B00	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0B02	0x0A05      	XORLW       5
0x0B04	0xB4D8      	BTFSC       STATUS, 2 
0x0B06	0xD771      	BRA         L_RS485Slave_Receive23
0x0B08	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0B0A	0x0A06      	XORLW       6
0x0B0C	0xE08C      	BZ          L_RS485Slave_Receive29
0x0B0E	0x507F      	MOVF        __Lib_RS485_sl_state, 0 
0x0B10	0x0A07      	XORLW       7
0x0B12	0xE0D7      	BZ          L_RS485Slave_Receive36
0x0B14	0xD7E2      	BRA         L_RS485Slave_Receive37
L_RS485Slave_Receive5:
;__Lib_RS485.c,177 :: 		
L_end_RS485Slave_Receive:
0x0B16	0x0012      	RETURN      0
; end of _RS485Slave_Receive
_public_Read:
;DS18B20.c,105 :: 		char* public_Read(unsigned short sIndex){
;DS18B20.c,106 :: 		Ow_Reset(&PORT, PIN);                         // Onewire reset signal
0x0B18	0x0E81      	MOVLW       PORTB
0x0B1A	0x0100      	MOVLB       0
0x0B1C	0x6FDC      	MOVWF       FARG_Ow_Reset_port, 1
0x0B1E	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0B20	0x6FDD      	MOVWF       FARG_Ow_Reset_port+1, 1
0x0B22	0x0E04      	MOVLW       4
0x0B24	0x6FDE      	MOVWF       FARG_Ow_Reset_pin, 1
0x0B26	0xF000ECD2  	CALL        _Ow_Reset, 0
;DS18B20.c,107 :: 		Ow_Write(&PORT, PIN, 0x55);                   // Issue command Match_ROM
0x0B2A	0x0E81      	MOVLW       PORTB
0x0B2C	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0B2E	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0B30	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0B32	0x0E04      	MOVLW       4
0x0B34	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0B36	0x0E55      	MOVLW       85
0x0B38	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x0B3A	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,110 :: 		for (index=0;index<8;index++)
0x0B3E	0x6BCC      	CLRF        _index, 1
L_public_Read6:
0x0B40	0x0E08      	MOVLW       8
0x0B42	0x5DCC      	SUBWF       _index, 0, 1
0x0B44	0xE223      	BC          L_public_Read7
;DS18B20.c,112 :: 		Ow_Write(&PORT, PIN, g_cSlaveROM[sIndex][index]);
0x0B46	0x0E81      	MOVLW       PORTB
0x0B48	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0B4A	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0B4C	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0B4E	0x0E04      	MOVLW       4
0x0B50	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0B52	0x0E03      	MOVLW       3
0x0B54	0x6E02      	MOVWF       R2 
0x0B56	0xF000C0CD  	MOVFF       FARG_public_Read_sIndex, R0
0x0B5A	0x0E00      	MOVLW       0
0x0B5C	0x6E01      	MOVWF       R1 
0x0B5E	0x5002      	MOVF        R2, 0 
L__public_Read67:
0x0B60	0xE005      	BZ          L__public_Read68
0x0B62	0x3600      	RLCF        R0, 1 
0x0B64	0x9000      	BCF         R0, 0 
0x0B66	0x3601      	RLCF        R1, 1 
0x0B68	0x0FFF      	ADDLW       255
0x0B6A	0xD7FA      	BRA         L__public_Read67
L__public_Read68:
0x0B6C	0x0EA4      	MOVLW       _g_cSlaveROM
0x0B6E	0x2600      	ADDWF       R0, 1 
0x0B70	0x0E00      	MOVLW       hi_addr(_g_cSlaveROM)
0x0B72	0x2201      	ADDWFC      R1, 1 
0x0B74	0x51CC      	MOVF        _index, 0, 1
0x0B76	0x2400      	ADDWF       R0, 0 
0x0B78	0x6EE9      	MOVWF       FSR0L 
0x0B7A	0x0E00      	MOVLW       0
0x0B7C	0x2001      	ADDWFC      R1, 0 
0x0B7E	0x6EEA      	MOVWF       FSR0H 
0x0B80	0xF0DFCFEE  	MOVFF       POSTINC0, FARG_Ow_Write_data_
0x0B84	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,110 :: 		for (index=0;index<8;index++)
0x0B88	0x2BCC      	INCF        _index, 1, 1
;DS18B20.c,113 :: 		}
0x0B8A	0xD7DA      	BRA         L_public_Read6
L_public_Read7:
;DS18B20.c,114 :: 		Delay_ms(10);
0x0B8C	0x0E0D      	MOVLW       13
0x0B8E	0x6E0C      	MOVWF       R12, 0
0x0B90	0x0EFB      	MOVLW       251
0x0B92	0x6E0D      	MOVWF       R13, 0
L_public_Read9:
0x0B94	0x2E0D      	DECFSZ      R13, 1, 0
0x0B96	0xD7FE      	BRA         L_public_Read9
0x0B98	0x2E0C      	DECFSZ      R12, 1, 0
0x0B9A	0xD7FC      	BRA         L_public_Read9
0x0B9C	0x0000      	NOP
0x0B9E	0x0000      	NOP
;DS18B20.c,116 :: 		Ow_Write(&PORT, PIN, 0x44);                   // Issue command CONVERT_T
0x0BA0	0x0E81      	MOVLW       PORTB
0x0BA2	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0BA4	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0BA6	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0BA8	0x0E04      	MOVLW       4
0x0BAA	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0BAC	0x0E44      	MOVLW       68
0x0BAE	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x0BB0	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,117 :: 		Delay_ms(760);        // 760ms
0x0BB4	0x0E04      	MOVLW       4
0x0BB6	0x6E0B      	MOVWF       R11, 0
0x0BB8	0x0EDB      	MOVLW       219
0x0BBA	0x6E0C      	MOVWF       R12, 0
0x0BBC	0x0EFF      	MOVLW       255
0x0BBE	0x6E0D      	MOVWF       R13, 0
L_public_Read10:
0x0BC0	0x2E0D      	DECFSZ      R13, 1, 0
0x0BC2	0xD7FE      	BRA         L_public_Read10
0x0BC4	0x2E0C      	DECFSZ      R12, 1, 0
0x0BC6	0xD7FC      	BRA         L_public_Read10
0x0BC8	0x2E0B      	DECFSZ      R11, 1, 0
0x0BCA	0xD7FA      	BRA         L_public_Read10
;DS18B20.c,120 :: 		Ow_Reset(&PORT, PIN);
0x0BCC	0x0E81      	MOVLW       PORTB
0x0BCE	0x6FDC      	MOVWF       FARG_Ow_Reset_port, 1
0x0BD0	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0BD2	0x6FDD      	MOVWF       FARG_Ow_Reset_port+1, 1
0x0BD4	0x0E04      	MOVLW       4
0x0BD6	0x6FDE      	MOVWF       FARG_Ow_Reset_pin, 1
0x0BD8	0xF000ECD2  	CALL        _Ow_Reset, 0
;DS18B20.c,121 :: 		Ow_Write(&PORT, PIN, 0x55);                   // Issue command Match_ROM
0x0BDC	0x0E81      	MOVLW       PORTB
0x0BDE	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0BE0	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0BE2	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0BE4	0x0E04      	MOVLW       4
0x0BE6	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0BE8	0x0E55      	MOVLW       85
0x0BEA	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x0BEC	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,123 :: 		for (index=0;index<8;index++)
0x0BF0	0x6BCC      	CLRF        _index, 1
L_public_Read11:
0x0BF2	0x0E08      	MOVLW       8
0x0BF4	0x5DCC      	SUBWF       _index, 0, 1
0x0BF6	0xE223      	BC          L_public_Read12
;DS18B20.c,125 :: 		Ow_Write(&PORT, PIN, g_cSlaveROM[sIndex][index]);
0x0BF8	0x0E81      	MOVLW       PORTB
0x0BFA	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0BFC	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0BFE	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0C00	0x0E04      	MOVLW       4
0x0C02	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0C04	0x0E03      	MOVLW       3
0x0C06	0x6E02      	MOVWF       R2 
0x0C08	0xF000C0CD  	MOVFF       FARG_public_Read_sIndex, R0
0x0C0C	0x0E00      	MOVLW       0
0x0C0E	0x6E01      	MOVWF       R1 
0x0C10	0x5002      	MOVF        R2, 0 
L__public_Read69:
0x0C12	0xE005      	BZ          L__public_Read70
0x0C14	0x3600      	RLCF        R0, 1 
0x0C16	0x9000      	BCF         R0, 0 
0x0C18	0x3601      	RLCF        R1, 1 
0x0C1A	0x0FFF      	ADDLW       255
0x0C1C	0xD7FA      	BRA         L__public_Read69
L__public_Read70:
0x0C1E	0x0EA4      	MOVLW       _g_cSlaveROM
0x0C20	0x2600      	ADDWF       R0, 1 
0x0C22	0x0E00      	MOVLW       hi_addr(_g_cSlaveROM)
0x0C24	0x2201      	ADDWFC      R1, 1 
0x0C26	0x51CC      	MOVF        _index, 0, 1
0x0C28	0x2400      	ADDWF       R0, 0 
0x0C2A	0x6EE9      	MOVWF       FSR0L 
0x0C2C	0x0E00      	MOVLW       0
0x0C2E	0x2001      	ADDWFC      R1, 0 
0x0C30	0x6EEA      	MOVWF       FSR0H 
0x0C32	0xF0DFCFEE  	MOVFF       POSTINC0, FARG_Ow_Write_data_
0x0C36	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,123 :: 		for (index=0;index<8;index++)
0x0C3A	0x2BCC      	INCF        _index, 1, 1
;DS18B20.c,126 :: 		}
0x0C3C	0xD7DA      	BRA         L_public_Read11
L_public_Read12:
;DS18B20.c,127 :: 		Delay_ms(10);
0x0C3E	0x0E0D      	MOVLW       13
0x0C40	0x6E0C      	MOVWF       R12, 0
0x0C42	0x0EFB      	MOVLW       251
0x0C44	0x6E0D      	MOVWF       R13, 0
L_public_Read14:
0x0C46	0x2E0D      	DECFSZ      R13, 1, 0
0x0C48	0xD7FE      	BRA         L_public_Read14
0x0C4A	0x2E0C      	DECFSZ      R12, 1, 0
0x0C4C	0xD7FC      	BRA         L_public_Read14
0x0C4E	0x0000      	NOP
0x0C50	0x0000      	NOP
;DS18B20.c,128 :: 		Ow_Write(&PORT, PIN, 0xBE);
0x0C52	0x0E81      	MOVLW       PORTB
0x0C54	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0C56	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0C58	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0C5A	0x0E04      	MOVLW       4
0x0C5C	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0C5E	0x0EBE      	MOVLW       190
0x0C60	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x0C62	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,130 :: 		iTemp =  Ow_Read(&PORT, PIN);                  // LSB (the LSB is first transferred
0x0C66	0x0E81      	MOVLW       PORTB
0x0C68	0x6FD5      	MOVWF       FARG_Ow_Read_port, 1
0x0C6A	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0C6C	0x6FD6      	MOVWF       FARG_Ow_Read_port+1, 1
0x0C6E	0x0E04      	MOVLW       4
0x0C70	0x6FD7      	MOVWF       FARG_Ow_Read_pin, 1
0x0C72	0xDC6E      	RCALL       _Ow_Read
0x0C74	0xF0A0C000  	MOVFF       R0, _iTemp
0x0C78	0x0E00      	MOVLW       0
0x0C7A	0x6FA1      	MOVWF       _iTemp+1, 1
;DS18B20.c,131 :: 		iTemp = (Ow_Read(&PORT, PIN) << 8) + iTemp;
0x0C7C	0x0E81      	MOVLW       PORTB
0x0C7E	0x6FD5      	MOVWF       FARG_Ow_Read_port, 1
0x0C80	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0C82	0x6FD6      	MOVWF       FARG_Ow_Read_port+1, 1
0x0C84	0x0E04      	MOVLW       4
0x0C86	0x6FD7      	MOVWF       FARG_Ow_Read_pin, 1
0x0C88	0xDC63      	RCALL       _Ow_Read
0x0C8A	0xF002C000  	MOVFF       R0, R2
0x0C8E	0x6A01      	CLRF        R1 
0x0C90	0x5001      	MOVF        R1, 0 
0x0C92	0x27A0      	ADDWF       _iTemp, 1, 1
0x0C94	0x5002      	MOVF        R2, 0 
0x0C96	0x23A1      	ADDWFC      _iTemp+1, 1, 1
;DS18B20.c,132 :: 		TEMPtoTEXT();
0x0C98	0xDC96      	RCALL       _TEMPtoTEXT
;DS18B20.c,133 :: 		return ctext;
0x0C9A	0xF000C052  	MOVFF       _ctext, R0
0x0C9E	0xF001C053  	MOVFF       _ctext+1, R1
;DS18B20.c,134 :: 		}
L_end_public_Read:
0x0CA2	0x0012      	RETURN      0
; end of _public_Read
_AddLine:
;Silo.c,114 :: 		void AddLine(){
;Silo.c,115 :: 		UART1_Write(10);
0x0CA4	0x0E0A      	MOVLW       10
0x0CA6	0x0100      	MOVLB       0
0x0CA8	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0CAA	0xF000EC5E  	CALL        _UART1_Write, 0
;Silo.c,116 :: 		UART1_Write(13);
0x0CAE	0x0E0D      	MOVLW       13
0x0CB0	0x0100      	MOVLB       0
0x0CB2	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0CB4	0xF000EC5E  	CALL        _UART1_Write, 0
;Silo.c,117 :: 		UART1_Write_Text("======");
0x0CB8	0x0E4A      	MOVLW       ?lstr5_Silo
0x0CBA	0x0100      	MOVLB       0
0x0CBC	0x6FD5      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0CBE	0x0E00      	MOVLW       hi_addr(?lstr5_Silo)
0x0CC0	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0CC2	0xDDC5      	RCALL       _UART1_Write_Text
;Silo.c,118 :: 		UART1_Write(10);
0x0CC4	0x0E0A      	MOVLW       10
0x0CC6	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0CC8	0xF000EC5E  	CALL        _UART1_Write, 0
;Silo.c,119 :: 		UART1_Write(13);
0x0CCC	0x0E0D      	MOVLW       13
0x0CCE	0x0100      	MOVLB       0
0x0CD0	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0CD2	0xF000EC5E  	CALL        _UART1_Write, 0
;Silo.c,120 :: 		}
L_end_AddLine:
0x0CD6	0x0012      	RETURN      0
; end of _AddLine
_public_Search:
;DS18B20.c,75 :: 		void public_Search(){
;DS18B20.c,76 :: 		LastDiscrepancy = 0;
0x0CD8	0x6A7D      	CLRF        _LastDiscrepancy 
0x0CDA	0x6A7E      	CLRF        _LastDiscrepancy+1 
;DS18B20.c,77 :: 		LastDeviceFlag = 0;
0x0CDC	0x0100      	MOVLB       0
0x0CDE	0x6B85      	CLRF        _LastDeviceFlag, 1
0x0CE0	0x6B86      	CLRF        _LastDeviceFlag+1, 1
;DS18B20.c,78 :: 		LastFamilyDiscrepancy = 0;
0x0CE2	0x6B81      	CLRF        _LastFamilyDiscrepancy, 1
0x0CE4	0x6B82      	CLRF        _LastFamilyDiscrepancy+1, 1
;DS18B20.c,79 :: 		Ow_Reset(&PORT, PIN);
0x0CE6	0x0E81      	MOVLW       PORTB
0x0CE8	0x6FDC      	MOVWF       FARG_Ow_Reset_port, 1
0x0CEA	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0CEC	0x6FDD      	MOVWF       FARG_Ow_Reset_port+1, 1
0x0CEE	0x0E04      	MOVLW       4
0x0CF0	0x6FDE      	MOVWF       FARG_Ow_Reset_pin, 1
0x0CF2	0xF000ECD2  	CALL        _Ow_Reset, 0
;DS18B20.c,80 :: 		Ow_Write(&PORT, PIN, 0xF0); // Issue command Search_ROM
0x0CF6	0x0E81      	MOVLW       PORTB
0x0CF8	0x6FDC      	MOVWF       FARG_Ow_Write_port, 1
0x0CFA	0x0E0F      	MOVLW       hi_addr(PORTB)
0x0CFC	0x6FDD      	MOVWF       FARG_Ow_Write_port+1, 1
0x0CFE	0x0E04      	MOVLW       4
0x0D00	0x6FDE      	MOVWF       FARG_Ow_Write_pin, 1
0x0D02	0x0EF0      	MOVLW       240
0x0D04	0x6FDF      	MOVWF       FARG_Ow_Write_data_, 1
0x0D06	0xF000EC7A  	CALL        _Ow_Write, 0
;DS18B20.c,84 :: 		jj = 0;
0x0D0A	0x6A6A      	CLRF        _jj 
0x0D0C	0x6A6B      	CLRF        _jj+1 
;DS18B20.c,86 :: 		while (1)
L_public_Search0:
;DS18B20.c,88 :: 		if (search()== 0)
0x0D0E	0xF001EC9B  	CALL        _search, 0
0x0D12	0x0E00      	MOVLW       0
0x0D14	0x1801      	XORWF       R1, 0 
0x0D16	0xE102      	BNZ         L__public_Search62
0x0D18	0x0E00      	MOVLW       0
0x0D1A	0x1800      	XORWF       R0, 0 
L__public_Search62:
0x0D1C	0xE101      	BNZ         L_public_Search2
;DS18B20.c,89 :: 		break;
0x0D1E	0xD053      	BRA         L_public_Search1
L_public_Search2:
;DS18B20.c,90 :: 		UART1_Write_Text("search");
0x0D20	0x0E22      	MOVLW       ?lstr2_DS18B20
0x0D22	0x6FD5      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0D24	0x0E00      	MOVLW       hi_addr(?lstr2_DS18B20)
0x0D26	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0D28	0xDD92      	RCALL       _UART1_Write_Text
;DS18B20.c,92 :: 		UART1_Write_Text(iTemp);
0x0D2A	0xF0D5C0A0  	MOVFF       _iTemp, FARG_UART1_Write_Text_uart_text
0x0D2E	0xF0D6C0A1  	MOVFF       _iTemp+1, FARG_UART1_Write_Text_uart_text+1
0x0D32	0xDD8D      	RCALL       _UART1_Write_Text
;DS18B20.c,93 :: 		UART1_Write(10);
0x0D34	0x0E0A      	MOVLW       10
0x0D36	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0D38	0xF000EC5E  	CALL        _UART1_Write, 0
;DS18B20.c,94 :: 		UART1_Write(13);
0x0D3C	0x0E0D      	MOVLW       13
0x0D3E	0x0100      	MOVLB       0
0x0D40	0x6FDC      	MOVWF       FARG_UART1_Write_data_, 1
0x0D42	0xF000EC5E  	CALL        _UART1_Write, 0
;DS18B20.c,95 :: 		for(iTemp=0; iTemp<8; iTemp++)
0x0D46	0x0100      	MOVLB       0
0x0D48	0x6BA0      	CLRF        _iTemp, 1
0x0D4A	0x6BA1      	CLRF        _iTemp+1, 1
L_public_Search3:
0x0D4C	0x0E00      	MOVLW       0
0x0D4E	0x5DA1      	SUBWF       _iTemp+1, 0, 1
0x0D50	0xE102      	BNZ         L__public_Search63
0x0D52	0x0E08      	MOVLW       8
0x0D54	0x5DA0      	SUBWF       _iTemp, 0, 1
L__public_Search63:
0x0D56	0xE234      	BC          L_public_Search4
;DS18B20.c,97 :: 		g_cSlaveROM[jj][iTemp]=ROM_NO[iTemp];
0x0D58	0x0E03      	MOVLW       3
0x0D5A	0x6E02      	MOVWF       R2 
0x0D5C	0xF000C06A  	MOVFF       _jj, R0
0x0D60	0xF001C06B  	MOVFF       _jj+1, R1
0x0D64	0x5002      	MOVF        R2, 0 
L__public_Search64:
0x0D66	0xE005      	BZ          L__public_Search65
0x0D68	0x3600      	RLCF        R0, 1 
0x0D6A	0x9000      	BCF         R0, 0 
0x0D6C	0x3601      	RLCF        R1, 1 
0x0D6E	0x0FFF      	ADDLW       255
0x0D70	0xD7FA      	BRA         L__public_Search64
L__public_Search65:
0x0D72	0x0EA4      	MOVLW       _g_cSlaveROM
0x0D74	0x2600      	ADDWF       R0, 1 
0x0D76	0x0E00      	MOVLW       hi_addr(_g_cSlaveROM)
0x0D78	0x2201      	ADDWFC      R1, 1 
0x0D7A	0x51A0      	MOVF        _iTemp, 0, 1
0x0D7C	0x2400      	ADDWF       R0, 0 
0x0D7E	0x6EE1      	MOVWF       FSR1L 
0x0D80	0x51A1      	MOVF        _iTemp+1, 0, 1
0x0D82	0x2001      	ADDWFC      R1, 0 
0x0D84	0x6EE2      	MOVWF       FSR1H 
0x0D86	0x0E5E      	MOVLW       _ROM_NO
0x0D88	0x25A0      	ADDWF       _iTemp, 0, 1
0x0D8A	0x6EE9      	MOVWF       FSR0L 
0x0D8C	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x0D8E	0x21A1      	ADDWFC      _iTemp+1, 0, 1
0x0D90	0x6EEA      	MOVWF       FSR0H 
0x0D92	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;DS18B20.c,98 :: 		ByteToHex(ROM_NO[iTemp],ctext);
0x0D96	0x0E5E      	MOVLW       _ROM_NO
0x0D98	0x25A0      	ADDWF       _iTemp, 0, 1
0x0D9A	0x6EE9      	MOVWF       FSR0L 
0x0D9C	0x0E00      	MOVLW       hi_addr(_ROM_NO)
0x0D9E	0x21A1      	ADDWFC      _iTemp+1, 0, 1
0x0DA0	0x6EEA      	MOVWF       FSR0H 
0x0DA2	0xF0D5CFEE  	MOVFF       POSTINC0, FARG_ByteToHex_input
0x0DA6	0xF0D6C052  	MOVFF       _ctext, FARG_ByteToHex_output
0x0DAA	0xF0D7C053  	MOVFF       _ctext+1, FARG_ByteToHex_output+1
0x0DAE	0xDD0F      	RCALL       _ByteToHex
;DS18B20.c,99 :: 		UART1_Write_Text(ctext);
0x0DB0	0xF0D5C052  	MOVFF       _ctext, FARG_UART1_Write_Text_uart_text
0x0DB4	0xF0D6C053  	MOVFF       _ctext+1, FARG_UART1_Write_Text_uart_text+1
0x0DB8	0xDD4A      	RCALL       _UART1_Write_Text
;DS18B20.c,95 :: 		for(iTemp=0; iTemp<8; iTemp++)
0x0DBA	0x4BA0      	INFSNZ      _iTemp, 1, 1
0x0DBC	0x2BA1      	INCF        _iTemp+1, 1, 1
;DS18B20.c,100 :: 		}
0x0DBE	0xD7C6      	BRA         L_public_Search3
L_public_Search4:
;DS18B20.c,101 :: 		jj++;
0x0DC0	0x4A6A      	INFSNZ      _jj, 1 
0x0DC2	0x2A6B      	INCF        _jj+1, 1 
;DS18B20.c,102 :: 		}
0x0DC4	0xD7A4      	BRA         L_public_Search0
L_public_Search1:
;DS18B20.c,103 :: 		}
L_end_public_Search:
0x0DC6	0x0012      	RETURN      0
; end of _public_Search
_RS485Slave_Send:
;__Lib_RS485.c,190 :: 		
;__Lib_RS485.c,195 :: 		
0x0DC8	0xF0D3C09E  	MOVFF       __Lib_RS485__sladdress, RS485Slave_Send_slave_address_L0
;__Lib_RS485.c,196 :: 		
0x0DCC	0x0100      	MOVLB       0
0x0DCE	0x5399      	MOVF        __Lib_RS485_specadr, 1, 1
0x0DD0	0xE003      	BZ          L_RS485Slave_Send38
;__Lib_RS485.c,197 :: 		
0x0DD2	0x0E01      	MOVLW       1
0x0DD4	0x199E      	XORWF       __Lib_RS485__sladdress, 0, 1
0x0DD6	0x6FD3      	MOVWF       RS485Slave_Send_slave_address_L0, 1
L_RS485Slave_Send38:
;__Lib_RS485.c,199 :: 		
0x0DD8	0x8482      	BSF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,200 :: 		
0x0DDA	0x05CF      	DECF        FARG_RS485Slave_Send_datalen, 0, 1
0x0DDC	0x6FD2      	MOVWF       RS485Slave_Send_len_L0, 1
;__Lib_RS485.c,201 :: 		
0x0DDE	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0DE2	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0DE6	0x0E96      	MOVLW       150
0x0DE8	0x6EE6      	MOVWF       POSTINC1 
0x0DEA	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0DEE	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0DF2	0xDCE1      	RCALL       _____DoIFC
;__Lib_RS485.c,202 :: 		
0x0DF4	0x0100      	MOVLB       0
0x0DF6	0x51D3      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x0DF8	0x0A96      	XORLW       150
0x0DFA	0xE004      	BZ          L__RS485Slave_Send109
0x0DFC	0x51D3      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x0DFE	0x0AA9      	XORLW       169
0x0E00	0xE001      	BZ          L__RS485Slave_Send109
0x0E02	0xD002      	BRA         L_RS485Slave_Send41
L__RS485Slave_Send109:
;__Lib_RS485.c,203 :: 		
0x0E04	0x71D3      	BTG         RS485Slave_Send_slave_address_L0, 0, 1
;__Lib_RS485.c,204 :: 		
0x0E06	0x8DCF      	BSF         FARG_RS485Slave_Send_datalen, 6, 1
;__Lib_RS485.c,205 :: 		
L_RS485Slave_Send41:
;__Lib_RS485.c,206 :: 		
0x0E08	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0E0C	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0E10	0xFFE6C0D3  	MOVFF       RS485Slave_Send_slave_address_L0, POSTINC1
0x0E14	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0E18	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0E1C	0xDCCC      	RCALL       _____DoIFC
;__Lib_RS485.c,207 :: 		
0x0E1E	0x0100      	MOVLB       0
0x0E20	0x6BD0      	CLRF        RS485Slave_Send_i_L0, 1
L_RS485Slave_Send42:
0x0E22	0x51D0      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0E24	0x5DD2      	SUBWF       RS485Slave_Send_len_L0, 0, 1
0x0E26	0xE332      	BNC         L_RS485Slave_Send43
;__Lib_RS485.c,208 :: 		
0x0E28	0x51D0      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0E2A	0x25CD      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x0E2C	0x6EE9      	MOVWF       FSR0L 
0x0E2E	0x0E00      	MOVLW       0
0x0E30	0x21CE      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x0E32	0x6EEA      	MOVWF       FSR0H 
0x0E34	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0E38	0xF0D4C001  	MOVFF       R1, RS485Slave_Send_temp_L0
;__Lib_RS485.c,209 :: 		
0x0E3C	0x5001      	MOVF        R1, 0 
0x0E3E	0x0A96      	XORLW       150
0x0E40	0xE004      	BZ          L__RS485Slave_Send108
0x0E42	0x51D4      	MOVF        RS485Slave_Send_temp_L0, 0, 1
0x0E44	0x0AA9      	XORLW       169
0x0E46	0xE001      	BZ          L__RS485Slave_Send108
0x0E48	0xD01F      	BRA         L_RS485Slave_Send47
L__RS485Slave_Send108:
;__Lib_RS485.c,210 :: 		
0x0E4A	0x51D0      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0E4C	0x25CD      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x0E4E	0x6E01      	MOVWF       R1 
0x0E50	0x0E00      	MOVLW       0
0x0E52	0x21CE      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x0E54	0x6E02      	MOVWF       R2 
0x0E56	0xFFE9C001  	MOVFF       R1, FSR0L
0x0E5A	0xFFEAC002  	MOVFF       R2, FSR0H
0x0E5E	0x0E01      	MOVLW       1
0x0E60	0x18EE      	XORWF       POSTINC0, 0 
0x0E62	0x6E00      	MOVWF       R0 
0x0E64	0xFFE1C001  	MOVFF       R1, FSR1L
0x0E68	0xFFE2C002  	MOVFF       R2, FSR1H
0x0E6C	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_RS485.c,211 :: 		
0x0E70	0xF001C0D0  	MOVFF       RS485Slave_Send_i_L0, R1
0x0E74	0x0E04      	MOVLW       4
0x0E76	0x6E00      	MOVWF       R0 
0x0E78	0x5001      	MOVF        R1, 0 
L__RS485Slave_Send120:
0x0E7A	0xE004      	BZ          L__RS485Slave_Send121
0x0E7C	0x3600      	RLCF        R0, 1 
0x0E7E	0x9000      	BCF         R0, 0 
0x0E80	0x0FFF      	ADDLW       255
0x0E82	0xD7FB      	BRA         L__RS485Slave_Send120
L__RS485Slave_Send121:
0x0E84	0x5000      	MOVF        R0, 0 
0x0E86	0x13CF      	IORWF       FARG_RS485Slave_Send_datalen, 1, 1
;__Lib_RS485.c,212 :: 		
L_RS485Slave_Send47:
;__Lib_RS485.c,207 :: 		
0x0E88	0x2BD0      	INCF        RS485Slave_Send_i_L0, 1, 1
;__Lib_RS485.c,213 :: 		
0x0E8A	0xD7CB      	BRA         L_RS485Slave_Send42
L_RS485Slave_Send43:
;__Lib_RS485.c,214 :: 		
0x0E8C	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0E90	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0E94	0xFFE6C0CF  	MOVFF       FARG_RS485Slave_Send_datalen, POSTINC1
0x0E98	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0E9C	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0EA0	0xDC8A      	RCALL       _____DoIFC
;__Lib_RS485.c,215 :: 		
0x0EA2	0x0100      	MOVLB       0
0x0EA4	0x51D3      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x0EA6	0x19CF      	XORWF       FARG_RS485Slave_Send_datalen, 0, 1
0x0EA8	0x6FD1      	MOVWF       RS485Slave_Send_crc_send_L0, 1
;__Lib_RS485.c,216 :: 		
0x0EAA	0x6BD0      	CLRF        RS485Slave_Send_i_L0, 1
L_RS485Slave_Send48:
0x0EAC	0x51D0      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0EAE	0x5DD2      	SUBWF       RS485Slave_Send_len_L0, 0, 1
0x0EB0	0xE31E      	BNC         L_RS485Slave_Send49
;__Lib_RS485.c,217 :: 		
0x0EB2	0x51D0      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0EB4	0x25CD      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x0EB6	0x6E00      	MOVWF       R0 
0x0EB8	0x0E00      	MOVLW       0
0x0EBA	0x21CE      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x0EBC	0x6E01      	MOVWF       R1 
0x0EBE	0xFFD9C000  	MOVFF       R0, FSR2L
0x0EC2	0xFFDAC001  	MOVFF       R1, FSR2H
0x0EC6	0x50DE      	MOVF        POSTINC2, 0 
0x0EC8	0x1BD1      	XORWF       RS485Slave_Send_crc_send_L0, 1, 1
;__Lib_RS485.c,218 :: 		
0x0ECA	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0ECE	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0ED2	0xFFE9C000  	MOVFF       R0, FSR0L
0x0ED6	0xFFEAC001  	MOVFF       R1, FSR0H
0x0EDA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0EDE	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0EE2	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0EE6	0xDC67      	RCALL       _____DoIFC
;__Lib_RS485.c,216 :: 		
0x0EE8	0x0100      	MOVLB       0
0x0EEA	0x2BD0      	INCF        RS485Slave_Send_i_L0, 1, 1
;__Lib_RS485.c,219 :: 		
0x0EEC	0xD7DF      	BRA         L_RS485Slave_Send48
L_RS485Slave_Send49:
;__Lib_RS485.c,221 :: 		
0x0EEE	0x1DD1      	COMF        RS485Slave_Send_crc_send_L0, 0, 1
0x0EF0	0x6E01      	MOVWF       R1 
0x0EF2	0xF0D1C001  	MOVFF       R1, RS485Slave_Send_crc_send_L0
;__Lib_RS485.c,222 :: 		
0x0EF6	0x5001      	MOVF        R1, 0 
0x0EF8	0x0A96      	XORLW       150
0x0EFA	0xE004      	BZ          L__RS485Slave_Send107
0x0EFC	0x51D1      	MOVF        RS485Slave_Send_crc_send_L0, 0, 1
0x0EFE	0x0AA9      	XORLW       169
0x0F00	0xE001      	BZ          L__RS485Slave_Send107
0x0F02	0xD001      	BRA         L_RS485Slave_Send53
L__RS485Slave_Send107:
;__Lib_RS485.c,223 :: 		
0x0F04	0x2BD1      	INCF        RS485Slave_Send_crc_send_L0, 1, 1
L_RS485Slave_Send53:
;__Lib_RS485.c,224 :: 		
0x0F06	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0F0A	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0F0E	0xFFE6C0D1  	MOVFF       RS485Slave_Send_crc_send_L0, POSTINC1
0x0F12	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0F16	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0F1A	0xDC4D      	RCALL       _____DoIFC
;__Lib_RS485.c,225 :: 		
0x0F1C	0xFFE1C09C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0F20	0xFFE2C09D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0F24	0x0EA9      	MOVLW       169
0x0F26	0x6EE6      	MOVWF       POSTINC1 
0x0F28	0xF000C09A  	MOVFF       _UART_Wr_Ptr, R0
0x0F2C	0xF001C09B  	MOVFF       _UART_Wr_Ptr+1, R1
0x0F30	0xDC42      	RCALL       _____DoIFC
;__Lib_RS485.c,227 :: 		
L_RS485Slave_Send54:
0x0F32	0xF000C08F  	MOVFF       _UART_Tx_Idle_Ptr, R0
0x0F36	0xF001C090  	MOVFF       _UART_Tx_Idle_Ptr+1, R1
0x0F3A	0xDC3D      	RCALL       _____DoIFC
0x0F3C	0x5000      	MOVF        R0, 0 
0x0F3E	0x0A00      	XORLW       0
0x0F40	0xE101      	BNZ         L_RS485Slave_Send55
;__Lib_RS485.c,228 :: 		
0x0F42	0xD7F7      	BRA         L_RS485Slave_Send54
L_RS485Slave_Send55:
;__Lib_RS485.c,230 :: 		
0x0F44	0x9482      	BCF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,231 :: 		
L_end_RS485Slave_Send:
0x0F46	0x0012      	RETURN      0
; end of _RS485Slave_Send
_main:
0x0F48	0xF008ECCF  	CALL        4510, 0
;Silo.c,69 :: 		void main() {
;Silo.c,71 :: 		init();
0x0F4C	0xDC9A      	RCALL       _init
;Silo.c,72 :: 		public_Search();
0x0F4E	0xDEC4      	RCALL       _public_Search
;Silo.c,74 :: 		while(1){
L_main1:
;Silo.c,75 :: 		PORTA.B0=1;
0x0F50	0x8080      	BSF         PORTA, 0 
;Silo.c,76 :: 		Delay_ms(300);
0x0F52	0x0E02      	MOVLW       2
0x0F54	0x6E0B      	MOVWF       R11, 0
0x0F56	0x0E86      	MOVLW       134
0x0F58	0x6E0C      	MOVWF       R12, 0
0x0F5A	0x0E99      	MOVLW       153
0x0F5C	0x6E0D      	MOVWF       R13, 0
L_main3:
0x0F5E	0x0100      	MOVLB       0
0x0F60	0x2E0D      	DECFSZ      R13, 1, 0
0x0F62	0xD7FD      	BRA         L_main3
0x0F64	0x2E0C      	DECFSZ      R12, 1, 0
0x0F66	0xD7FB      	BRA         L_main3
0x0F68	0x2E0B      	DECFSZ      R11, 1, 0
0x0F6A	0xD7F9      	BRA         L_main3
;Silo.c,77 :: 		PORTA.B0=0;
0x0F6C	0x9080      	BCF         PORTA, 0 
;Silo.c,78 :: 		UART1_Write_Text("Line");
0x0F6E	0x0E1D      	MOVLW       ?lstr2_Silo
0x0F70	0x6FD5      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0F72	0x0E00      	MOVLW       hi_addr(?lstr2_Silo)
0x0F74	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0F76	0xDC6B      	RCALL       _UART1_Write_Text
;Silo.c,79 :: 		AddLine();
0x0F78	0xDE95      	RCALL       _AddLine
;Silo.c,81 :: 		text = public_Read(0);
0x0F7A	0x0100      	MOVLB       0
0x0F7C	0x6BCD      	CLRF        FARG_public_Read_sIndex, 1
0x0F7E	0xDDCC      	RCALL       _public_Read
0x0F80	0xF032C000  	MOVFF       R0, _text
0x0F84	0xF033C001  	MOVFF       R1, _text+1
;Silo.c,82 :: 		UART1_Write_Text(text);
0x0F88	0xF0D5C000  	MOVFF       R0, FARG_UART1_Write_Text_uart_text
0x0F8C	0xF0D6C001  	MOVFF       R1, FARG_UART1_Write_Text_uart_text+1
0x0F90	0xDC5E      	RCALL       _UART1_Write_Text
;Silo.c,83 :: 		AddLine();
0x0F92	0xDE88      	RCALL       _AddLine
;Silo.c,85 :: 		text = public_Read(1);// public_Read_Temp();
0x0F94	0x0E01      	MOVLW       1
0x0F96	0x0100      	MOVLB       0
0x0F98	0x6FCD      	MOVWF       FARG_public_Read_sIndex, 1
0x0F9A	0xDDBE      	RCALL       _public_Read
0x0F9C	0xF032C000  	MOVFF       R0, _text
0x0FA0	0xF033C001  	MOVFF       R1, _text+1
;Silo.c,86 :: 		UART1_Write_Text(text);
0x0FA4	0xF0D5C000  	MOVFF       R0, FARG_UART1_Write_Text_uart_text
0x0FA8	0xF0D6C001  	MOVFF       R1, FARG_UART1_Write_Text_uart_text+1
0x0FAC	0xDC50      	RCALL       _UART1_Write_Text
;Silo.c,87 :: 		AddLine();
0x0FAE	0xDE7A      	RCALL       _AddLine
;Silo.c,89 :: 		UART1_Write_text(dat[4]);
0x0FB0	0xF0D5C070  	MOVFF       _dat+4, FARG_UART1_Write_Text_uart_text
0x0FB4	0x0E00      	MOVLW       0
0x0FB6	0x0100      	MOVLB       0
0x0FB8	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0FBA	0xDC49      	RCALL       _UART1_Write_Text
;Silo.c,90 :: 		if (dat[5])  {                     // if an error detected, signal it
0x0FBC	0x5271      	MOVF        _dat+5, 1 
0x0FBE	0xE003      	BZ          L_main4
;Silo.c,91 :: 		PORTD = 0xAA;                  //   setting portd to 0xAA
0x0FC0	0x0EAA      	MOVLW       170
0x0FC2	0x6E83      	MOVWF       PORTD 
;Silo.c,92 :: 		dat[5] = 0;
0x0FC4	0x6A71      	CLRF        _dat+5 
;Silo.c,93 :: 		}
L_main4:
;Silo.c,94 :: 		if (dat[4]!=0) {                    // upon completed valid message receive
0x0FC6	0x5070      	MOVF        _dat+4, 0 
0x0FC8	0x0A00      	XORLW       0
0x0FCA	0xE031      	BZ          L_main5
;Silo.c,95 :: 		UART1_Write_text("okudu");
0x0FCC	0x0E34      	MOVLW       ?lstr3_Silo
0x0FCE	0x6FD5      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0FD0	0x0E00      	MOVLW       hi_addr(?lstr3_Silo)
0x0FD2	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0FD4	0xDC3C      	RCALL       _UART1_Write_Text
;Silo.c,96 :: 		dat[4] = 0;                    //   data[4] is set to 0xFF
0x0FD6	0x6A70      	CLRF        _dat+4 
;Silo.c,97 :: 		j = dat[3];
0x0FD8	0xF097C06F  	MOVFF       _dat+3, _j
;Silo.c,98 :: 		for (i = 1; i <= dat[3];i++){
0x0FDC	0x0E01      	MOVLW       1
0x0FDE	0x6F98      	MOVWF       _i, 1
L_main6:
0x0FE0	0x5198      	MOVF        _i, 0, 1
0x0FE2	0x5C6F      	SUBWF       _dat+3, 0 
0x0FE4	0xE30F      	BNC         L_main7
;Silo.c,99 :: 		PORTD = dat[i-1];
0x0FE6	0x0598      	DECF        _i, 0, 1
0x0FE8	0x6E00      	MOVWF       R0 
0x0FEA	0x6A01      	CLRF        R1 
0x0FEC	0x0E00      	MOVLW       0
0x0FEE	0x5A01      	SUBWFB      R1, 1 
0x0FF0	0x0E6C      	MOVLW       _dat
0x0FF2	0x2400      	ADDWF       R0, 0 
0x0FF4	0x6EE9      	MOVWF       FSR0L 
0x0FF6	0x0E00      	MOVLW       hi_addr(_dat)
0x0FF8	0x2001      	ADDWFC      R1, 0 
0x0FFA	0x6EEA      	MOVWF       FSR0H 
0x0FFC	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;Silo.c,98 :: 		for (i = 1; i <= dat[3];i++){
0x1000	0x2B98      	INCF        _i, 1, 1
;Silo.c,101 :: 		}
0x1002	0xD7EE      	BRA         L_main6
L_main7:
;Silo.c,102 :: 		dat[0] = dat[0]+1;
0x1004	0x2A6C      	INCF        _dat, 1 
;Silo.c,106 :: 		Delay_ms(1);
0x1006	0x0E02      	MOVLW       2
0x1008	0x6E0C      	MOVWF       R12, 0
0x100A	0x0E4B      	MOVLW       75
0x100C	0x6E0D      	MOVWF       R13, 0
L_main9:
0x100E	0x2E0D      	DECFSZ      R13, 1, 0
0x1010	0xD7FE      	BRA         L_main9
0x1012	0x2E0C      	DECFSZ      R12, 1, 0
0x1014	0xD7FC      	BRA         L_main9
;Silo.c,107 :: 		UART1_Write_text("RS485Slave_Send");
0x1016	0x0E3A      	MOVLW       ?lstr4_Silo
0x1018	0x6FD5      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x101A	0x0E00      	MOVLW       hi_addr(?lstr4_Silo)
0x101C	0x6FD6      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x101E	0xDC17      	RCALL       _UART1_Write_Text
;Silo.c,108 :: 		RS485Slave_Send(dat,1);        //   and send it back to master
0x1020	0x0E6C      	MOVLW       _dat
0x1022	0x6FCD      	MOVWF       FARG_RS485Slave_Send_data_buffer, 1
0x1024	0x0E00      	MOVLW       hi_addr(_dat)
0x1026	0x6FCE      	MOVWF       FARG_RS485Slave_Send_data_buffer+1, 1
0x1028	0x0E01      	MOVLW       1
0x102A	0x6FCF      	MOVWF       FARG_RS485Slave_Send_datalen, 1
0x102C	0xDECD      	RCALL       _RS485Slave_Send
;Silo.c,109 :: 		}
L_main5:
;Silo.c,110 :: 		Delay_ms(1000);
0x102E	0x0E06      	MOVLW       6
0x1030	0x6E0B      	MOVWF       R11, 0
0x1032	0x0E13      	MOVLW       19
0x1034	0x6E0C      	MOVWF       R12, 0
0x1036	0x0EAD      	MOVLW       173
0x1038	0x6E0D      	MOVWF       R13, 0
L_main10:
0x103A	0x2E0D      	DECFSZ      R13, 1, 0
0x103C	0xD7FE      	BRA         L_main10
0x103E	0x2E0C      	DECFSZ      R12, 1, 0
0x1040	0xD7FC      	BRA         L_main10
0x1042	0x2E0B      	DECFSZ      R11, 1, 0
0x1044	0xD7FA      	BRA         L_main10
0x1046	0x0000      	NOP
0x1048	0x0000      	NOP
;Silo.c,112 :: 		}
0x104A	0xD782      	BRA         L_main1
;Silo.c,113 :: 		}
L_end_main:
0x104C	0xD7FF      	BRA         $+0
; end of _main
0x119E	0xF01DEE10  	LFSR        1, 29
0x11A2	0x0E40      	MOVLW       64
0x11A4	0x6E00      	MOVWF       R0 
0x11A6	0x0E01      	MOVLW       1
0x11A8	0x6E01      	MOVWF       R1 
0x11AA	0x0E4E      	MOVLW       78
0x11AC	0x6EF6      	MOVWF       4086 
0x11AE	0x0E11      	MOVLW       17
0x11B0	0x6EF7      	MOVWF       TBLPTRH 
0x11B2	0x0E00      	MOVLW       0
0x11B4	0x6EF8      	MOVWF       TBLPTRU 
0x11B6	0xF004EC5E  	CALL        2236, 0
0x11BA	0x0012      	RETURN      0
;DS18B20.c,41 :: _dscrc_table
0x104E	0x5E00 ;_dscrc_table+0
0x1050	0xE2BC ;_dscrc_table+2
0x1052	0x3F61 ;_dscrc_table+4
0x1054	0x83DD ;_dscrc_table+6
0x1056	0x9CC2 ;_dscrc_table+8
0x1058	0x207E ;_dscrc_table+10
0x105A	0xFDA3 ;_dscrc_table+12
0x105C	0x411F ;_dscrc_table+14
0x105E	0xC39D ;_dscrc_table+16
0x1060	0x7F21 ;_dscrc_table+18
0x1062	0xA2FC ;_dscrc_table+20
0x1064	0x1E40 ;_dscrc_table+22
0x1066	0x015F ;_dscrc_table+24
0x1068	0xBDE3 ;_dscrc_table+26
0x106A	0x603E ;_dscrc_table+28
0x106C	0xDC82 ;_dscrc_table+30
0x106E	0x7D23 ;_dscrc_table+32
0x1070	0xC19F ;_dscrc_table+34
0x1072	0x1C42 ;_dscrc_table+36
0x1074	0xA0FE ;_dscrc_table+38
0x1076	0xBFE1 ;_dscrc_table+40
0x1078	0x035D ;_dscrc_table+42
0x107A	0xDE80 ;_dscrc_table+44
0x107C	0x623C ;_dscrc_table+46
0x107E	0xE0BE ;_dscrc_table+48
0x1080	0x5C02 ;_dscrc_table+50
0x1082	0x81DF ;_dscrc_table+52
0x1084	0x3D63 ;_dscrc_table+54
0x1086	0x227C ;_dscrc_table+56
0x1088	0x9EC0 ;_dscrc_table+58
0x108A	0x431D ;_dscrc_table+60
0x108C	0xFFA1 ;_dscrc_table+62
0x108E	0x1846 ;_dscrc_table+64
0x1090	0xA4FA ;_dscrc_table+66
0x1092	0x7927 ;_dscrc_table+68
0x1094	0xC59B ;_dscrc_table+70
0x1096	0xDA84 ;_dscrc_table+72
0x1098	0x6638 ;_dscrc_table+74
0x109A	0xBBE5 ;_dscrc_table+76
0x109C	0x0759 ;_dscrc_table+78
0x109E	0x85DB ;_dscrc_table+80
0x10A0	0x3967 ;_dscrc_table+82
0x10A2	0xE4BA ;_dscrc_table+84
0x10A4	0x5806 ;_dscrc_table+86
0x10A6	0x4719 ;_dscrc_table+88
0x10A8	0xFBA5 ;_dscrc_table+90
0x10AA	0x2678 ;_dscrc_table+92
0x10AC	0x9AC4 ;_dscrc_table+94
0x10AE	0x3B65 ;_dscrc_table+96
0x10B0	0x87D9 ;_dscrc_table+98
0x10B2	0x5A04 ;_dscrc_table+100
0x10B4	0xE6B8 ;_dscrc_table+102
0x10B6	0xF9A7 ;_dscrc_table+104
0x10B8	0x451B ;_dscrc_table+106
0x10BA	0x98C6 ;_dscrc_table+108
0x10BC	0x247A ;_dscrc_table+110
0x10BE	0xA6F8 ;_dscrc_table+112
0x10C0	0x1A44 ;_dscrc_table+114
0x10C2	0xC799 ;_dscrc_table+116
0x10C4	0x7B25 ;_dscrc_table+118
0x10C6	0x643A ;_dscrc_table+120
0x10C8	0xD886 ;_dscrc_table+122
0x10CA	0x055B ;_dscrc_table+124
0x10CC	0xB9E7 ;_dscrc_table+126
0x10CE	0xD28C ;_dscrc_table+128
0x10D0	0x6E30 ;_dscrc_table+130
0x10D2	0xB3ED ;_dscrc_table+132
0x10D4	0x0F51 ;_dscrc_table+134
0x10D6	0x104E ;_dscrc_table+136
0x10D8	0xACF2 ;_dscrc_table+138
0x10DA	0x712F ;_dscrc_table+140
0x10DC	0xCD93 ;_dscrc_table+142
0x10DE	0x4F11 ;_dscrc_table+144
0x10E0	0xF3AD ;_dscrc_table+146
0x10E2	0x2E70 ;_dscrc_table+148
0x10E4	0x92CC ;_dscrc_table+150
0x10E6	0x8DD3 ;_dscrc_table+152
0x10E8	0x316F ;_dscrc_table+154
0x10EA	0xECB2 ;_dscrc_table+156
0x10EC	0x500E ;_dscrc_table+158
0x10EE	0xF1AF ;_dscrc_table+160
0x10F0	0x4D13 ;_dscrc_table+162
0x10F2	0x90CE ;_dscrc_table+164
0x10F4	0x2C72 ;_dscrc_table+166
0x10F6	0x336D ;_dscrc_table+168
0x10F8	0x8FD1 ;_dscrc_table+170
0x10FA	0x520C ;_dscrc_table+172
0x10FC	0xEEB0 ;_dscrc_table+174
0x10FE	0x6C32 ;_dscrc_table+176
0x1100	0xD08E ;_dscrc_table+178
0x1102	0x0D53 ;_dscrc_table+180
0x1104	0xB1EF ;_dscrc_table+182
0x1106	0xAEF0 ;_dscrc_table+184
0x1108	0x124C ;_dscrc_table+186
0x110A	0xCF91 ;_dscrc_table+188
0x110C	0x732D ;_dscrc_table+190
0x110E	0x94CA ;_dscrc_table+192
0x1110	0x2876 ;_dscrc_table+194
0x1112	0xF5AB ;_dscrc_table+196
0x1114	0x4917 ;_dscrc_table+198
0x1116	0x5608 ;_dscrc_table+200
0x1118	0xEAB4 ;_dscrc_table+202
0x111A	0x3769 ;_dscrc_table+204
0x111C	0x8BD5 ;_dscrc_table+206
0x111E	0x0957 ;_dscrc_table+208
0x1120	0xB5EB ;_dscrc_table+210
0x1122	0x6836 ;_dscrc_table+212
0x1124	0xD48A ;_dscrc_table+214
0x1126	0xCB95 ;_dscrc_table+216
0x1128	0x7729 ;_dscrc_table+218
0x112A	0xAAF4 ;_dscrc_table+220
0x112C	0x1648 ;_dscrc_table+222
0x112E	0xB7E9 ;_dscrc_table+224
0x1130	0x0B55 ;_dscrc_table+226
0x1132	0xD688 ;_dscrc_table+228
0x1134	0x6A34 ;_dscrc_table+230
0x1136	0x752B ;_dscrc_table+232
0x1138	0xC997 ;_dscrc_table+234
0x113A	0x144A ;_dscrc_table+236
0x113C	0xA8F6 ;_dscrc_table+238
0x113E	0x2A74 ;_dscrc_table+240
0x1140	0x96C8 ;_dscrc_table+242
0x1142	0x4B15 ;_dscrc_table+244
0x1144	0xF7A9 ;_dscrc_table+246
0x1146	0xE8B6 ;_dscrc_table+248
0x1148	0x540A ;_dscrc_table+250
0x114A	0x89D7 ;_dscrc_table+252
0x114C	0x356B ;_dscrc_table+254
; end of _dscrc_table
;Silo.c,0 :: ?ICS?lstr2_Silo
0x114E	0x694C ;?ICS?lstr2_Silo+0
0x1150	0x656E ;?ICS?lstr2_Silo+2
0x1152	0x00 ;?ICS?lstr2_Silo+4
; end of ?ICS?lstr2_Silo
;DS18B20.c,0 :: ?ICS?lstr2_DS18B20
0x1153	0x6573 ;?ICS?lstr2_DS18B20+0
0x1155	0x7261 ;?ICS?lstr2_DS18B20+2
0x1157	0x6863 ;?ICS?lstr2_DS18B20+4
0x1159	0x00 ;?ICS?lstr2_DS18B20+6
; end of ?ICS?lstr2_DS18B20
;Silo.c,0 :: ?ICS?lstr1_Silo
0x115A	0x3030 ;?ICS?lstr1_Silo+0
0x115C	0x2E30 ;?ICS?lstr1_Silo+2
0x115E	0x3030 ;?ICS?lstr1_Silo+4
0x1160	0x3030 ;?ICS?lstr1_Silo+6
0x1162	0x00 ;?ICS?lstr1_Silo+8
; end of ?ICS?lstr1_Silo
;Silo.c,0 :: ?ICS_text
0x1163	0x0029 ;?ICS_text+0
; end of ?ICS_text
;Silo.c,0 :: ?ICS?lstr3_Silo
0x1165	0x6B6F ;?ICS?lstr3_Silo+0
0x1167	0x6475 ;?ICS?lstr3_Silo+2
0x1169	0x0075 ;?ICS?lstr3_Silo+4
; end of ?ICS?lstr3_Silo
;Silo.c,0 :: ?ICS?lstr4_Silo
0x116B	0x5352 ;?ICS?lstr4_Silo+0
0x116D	0x3834 ;?ICS?lstr4_Silo+2
0x116F	0x5335 ;?ICS?lstr4_Silo+4
0x1171	0x616C ;?ICS?lstr4_Silo+6
0x1173	0x6576 ;?ICS?lstr4_Silo+8
0x1175	0x535F ;?ICS?lstr4_Silo+10
0x1177	0x6E65 ;?ICS?lstr4_Silo+12
0x1179	0x0064 ;?ICS?lstr4_Silo+14
; end of ?ICS?lstr4_Silo
;Silo.c,0 :: ?ICS?lstr5_Silo
0x117B	0x3D3D ;?ICS?lstr5_Silo+0
0x117D	0x3D3D ;?ICS?lstr5_Silo+2
0x117F	0x3D3D ;?ICS?lstr5_Silo+4
0x1181	0x00 ;?ICS?lstr5_Silo+6
; end of ?ICS?lstr5_Silo
;DS18B20.c,0 :: ?ICS_sRES_SHIFT
0x1182	0x04 ;?ICS_sRES_SHIFT+0
; end of ?ICS_sRES_SHIFT
;DS18B20.c,0 :: ?ICS_ctext
0x1183	0x0054 ;?ICS_ctext+0
; end of ?ICS_ctext
;DS18B20.c,0 :: ?ICS?lstr1_DS18B20
0x1185	0x3030 ;?ICS?lstr1_DS18B20+0
0x1187	0x2E30 ;?ICS?lstr1_DS18B20+2
0x1189	0x3030 ;?ICS?lstr1_DS18B20+4
0x118B	0x3030 ;?ICS?lstr1_DS18B20+6
0x118D	0x00 ;?ICS?lstr1_DS18B20+8
; end of ?ICS?lstr1_DS18B20
;__Lib_Conversions.c,3 :: __Lib_Conversions_Digits
0x118E	0x3130 ;__Lib_Conversions_Digits+0
0x1190	0x3332 ;__Lib_Conversions_Digits+2
0x1192	0x3534 ;__Lib_Conversions_Digits+4
0x1194	0x3736 ;__Lib_Conversions_Digits+6
0x1196	0x3938 ;__Lib_Conversions_Digits+8
0x1198	0x4241 ;__Lib_Conversions_Digits+10
0x119A	0x4443 ;__Lib_Conversions_Digits+12
0x119C	0x4645 ;__Lib_Conversions_Digits+14
; end of __Lib_Conversions_Digits
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [80]    _interrupt
0x0058      [12]    _Delay_50us
0x0064      [14]    _Delay_80us
0x0072      [14]    _Delay_500us
0x0080      [28]    _Ow_Write_Zero
0x009C      [28]    _Ow_Write_One
0x00B8       [4]    _Delay_1us
0x00BC      [14]    _UART1_Write
0x00CA      [42]    _docrc8
0x00F4     [108]    _Ow_Write
0x0160      [30]    _Div_8X8_U
0x017E      [18]    _UART1_Read
0x0190      [10]    _UART1_Data_Ready
0x019A      [10]    _UART1_Tx_Idle
0x01A4      [86]    _Ow_Reset
0x01FA      [80]    _Mul_16X16_U
0x024A      [54]    _Div_16X16_U
0x0280      [52]    _Ow_Read_Bit
0x02B4      [88]    _UART1_Init
0x030C      [42]    _RS485Slave_Init
0x0336     [538]    _search
0x0550     [118]    _Ow_Read
0x05C6     [496]    _TEMPtoTEXT
0x07B6      [24]    _____DoIFC
0x07CE     [128]    _ByteToHex
0x084E      [52]    _UART1_Write_Text
0x0882      [58]    _init
0x08BC      [16]    ___CC2DW
0x08CC     [588]    _RS485Slave_Receive
0x0B18     [396]    _public_Read
0x0CA4      [52]    _AddLine
0x0CD8     [240]    _public_Search
0x0DC8     [384]    _RS485Slave_Send
0x0F48     [262]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    Ow_Read_Bit_BitValue_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001D       [5]    ?lstr2_Silo
0x0022       [7]    ?lstr2_DS18B20
0x0029       [9]    ?lstr1_Silo
0x0032       [2]    _text
0x0034       [6]    ?lstr3_Silo
0x003A      [16]    ?lstr4_Silo
0x004A       [7]    ?lstr5_Silo
0x0051       [1]    _sRES_SHIFT
0x0052       [2]    _ctext
0x0054       [9]    ?lstr1_DS18B20
0x005D       [1]    _search_direction
0x005E       [8]    _ROM_NO
0x0066       [2]    _id_bit
0x0068       [2]    _cmp_id_bit
0x006A       [2]    _jj
0x006C       [9]    _dat
0x0075       [2]    _last_zero
0x0077       [2]    _rom_byte_number
0x0079       [1]    _crc8
0x007A       [2]    _id_bit_number
0x007C       [1]    _rom_byte_mask
0x007D       [2]    _LastDiscrepancy
0x007F       [1]    __Lib_RS485_sl_state
0x0080       [1]    RS485Slave_Receive_key_L0
0x0081       [2]    _LastFamilyDiscrepancy
0x0083       [2]    _search_result
0x0085       [2]    _LastDeviceFlag
0x0087       [4]    _UART_Rd_Ptr
0x008B       [4]    _UART_Rdy_Ptr
0x008F       [4]    _UART_Tx_Idle_Ptr
0x0093       [1]    RS485Slave_Receive_crc_is_ok_L0
0x0094       [1]    RS485Slave_Receive_rec_L0
0x0095       [1]    RS485Slave_Receive_datalen_L0
0x0096       [1]    RS485Slave_Receive_i_L0
0x0097       [1]    _j
0x0098       [1]    _i
0x0099       [1]    __Lib_RS485_specadr
0x009A       [4]    _UART_Wr_Ptr
0x009E       [1]    __Lib_RS485__sladdress
0x009F       [1]    _temp_whole
0x00A0       [2]    _iTemp
0x00A2       [2]    _temp_fraction
0x00A4      [40]    _g_cSlaveROM
0x00CC       [1]    _index
0x00CD       [2]    FARG_RS485Slave_Send_data_buffer
0x00CD       [1]    FARG_public_Read_sIndex
0x00CF       [1]    FARG_RS485Slave_Send_datalen
0x00D0       [1]    RS485Slave_Send_i_L0
0x00D1       [1]    RS485Slave_Send_crc_send_L0
0x00D2       [1]    RS485Slave_Send_len_L0
0x00D3       [1]    RS485Slave_Send_slave_address_L0
0x00D4       [1]    RS485Slave_Send_temp_L0
0x00D5       [1]    FARG_RS485Slave_Init_slave_address
0x00D5       [1]    FARG_ByteToHex_input
0x00D5       [2]    FARG_Ow_Read_port
0x00D5       [2]    FLOC__TEMPtoTEXT
0x00D5       [2]    FARG_UART1_Write_Text_uart_text
0x00D6       [2]    FARG_ByteToHex_output
0x00D7       [1]    UART1_Write_Text_data__L0
0x00D7       [1]    FARG_Ow_Read_pin
0x00D8       [1]    Ow_Read_i_L0
0x00D8       [1]    UART1_Write_Text_counter_L0
0x00D9       [1]    Ow_Read_tmp_L0
0x00DA       [1]    Ow_Read_bit_mask_0_L0
0x00DB       [1]    Ow_Read_bit_mask_1_L0
0x00DC       [2]    FARG_Ow_Reset_port
0x00DC       [2]    FARG_Ow_Write_port
0x00DC       [1]    FARG_UART1_Write_data_
0x00DC       [1]    FARG_docrc8_value
0x00DE       [1]    FARG_Ow_Reset_pin
0x00DE       [1]    FARG_Ow_Write_pin
0x00DF       [1]    Ow_Reset_res_L0
0x00DF       [1]    FARG_Ow_Write_data_
0x00E0       [1]    Ow_Reset_bit_mask_1_L0
0x00E0       [1]    Ow_Write_i_L0
0x00E1       [1]    Ow_Write_bit_mask_0_L0
0x00E2       [1]    Ow_Write_bit_mask_1_L0
0x00E3       [2]    FARG_RS485Slave_Receive_data_buffer
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F82       [0]    RC2_bit
0x0F82       [0]    rs485_rxtx_pin
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    rs485_rxtx_pin_direction
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F95       [1]    TRISD
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x104E     [256]    _dscrc_table
0x114E       [5]    ?ICS?lstr2_Silo
0x1153       [7]    ?ICS?lstr2_DS18B20
0x115A       [9]    ?ICS?lstr1_Silo
0x1163       [2]    ?ICS_text
0x1165       [6]    ?ICS?lstr3_Silo
0x116B      [16]    ?ICS?lstr4_Silo
0x117B       [7]    ?ICS?lstr5_Silo
0x1182       [1]    ?ICS_sRES_SHIFT
0x1183       [2]    ?ICS_ctext
0x1185       [9]    ?ICS?lstr1_DS18B20
0x118E      [16]    __Lib_Conversions_Digits
